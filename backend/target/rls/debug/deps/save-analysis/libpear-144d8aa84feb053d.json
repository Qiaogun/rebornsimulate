{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3","program":"C:\\Users\\Qiao\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","pear","--edition=2018","C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","--json=diagnostic-rendered-ansi,artifacts","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"color\"","--cfg","feature=\"default\"","--cfg","feature=\"yansi\"","-C","metadata=144d8aa84feb053d","-C","extra-filename=-144d8aa84feb053d","--out-dir","g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps","-L","dependency=g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps","--extern","inlinable_string=g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps\\libinlinable_string-1c8e2f848f3e6dd7.rmeta","--extern","pear_codegen=g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps\\pear_codegen-5fa870825a637f3d.dll","--extern","yansi=g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps\\libyansi-7d8489fa1ea57847.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Qiao\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps\\libpear-144d8aa84feb053d.rmeta"},"prelude":{"crate_id":{"name":"pear","disambiguator":[4188885434277185905,0]},"crate_root":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src","external_crates":[{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[10193565062885309191,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[11828252632451478976,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[12374244740244276079,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10571265039882681484,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[417492704836984899,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7421411805122234607,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14357827127085763175,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7547149687459966599,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[3948222140130536591,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[11460324065167655691,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","num":14,"id":{"name":"inlinable_string","disambiguator":[12227048835599285073,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","num":15,"id":{"name":"pear_codegen","disambiguator":[2099009347648079408,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","num":16,"id":{"name":"yansi","disambiguator":[13030992508153532261,0]}}],"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":0,"byte_end":228,"line_start":1,"line_end":14,"column_start":1,"column_end":30}},"imports":[{"kind":"Use","ref_id":{"krate":14,"index":0},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":51,"byte_end":67,"line_start":3,"line_end":3,"column_start":24,"column_end":40},"alias_span":null,"name":"inlinable_string","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":154},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":776,"byte_end":782,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"alias_span":null,"name":"parser","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":15,"index":155},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":784,"byte_end":790,"line_start":17,"line_end":17,"column_start":32,"column_end":38},"alias_span":null,"name":"switch","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":824,"byte_end":829,"line_start":19,"line_end":19,"column_start":17,"column_end":22},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":831,"byte_end":844,"line_start":19,"line_end":19,"column_start":24,"column_end":37},"alias_span":null,"name":"parse_declare","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":846,"byte_end":857,"line_start":19,"line_end":19,"column_start":39,"column_end":50},"alias_span":null,"name":"parse_error","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":859,"byte_end":868,"line_start":19,"line_end":19,"column_start":52,"column_end":61},"alias_span":null,"name":"parse_try","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":870,"byte_end":884,"line_start":19,"line_end":19,"column_start":63,"column_end":77},"alias_span":null,"name":"is_parse_debug","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":52},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":918,"byte_end":938,"line_start":21,"line_end":21,"column_start":17,"column_end":37},"alias_span":null,"name":"parse_current_marker","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":51},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":940,"byte_end":957,"line_start":21,"line_end":21,"column_start":39,"column_end":56},"alias_span":null,"name":"parse_last_marker","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":53},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":959,"byte_end":969,"line_start":21,"line_end":21,"column_start":58,"column_end":68},"alias_span":null,"name":"parse_mark","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":54},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":971,"byte_end":984,"line_start":21,"line_end":21,"column_start":70,"column_end":83},"alias_span":null,"name":"parse_context","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":1017,"byte_end":1031,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"impl_show_with","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7012,"byte_end":7016,"line_start":10,"line_end":10,"column_start":22,"column_end":26},"alias_span":null,"name":"Pear","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7018,"byte_end":7026,"line_start":10,"line_end":10,"column_start":28,"column_end":36},"alias_span":null,"name":"Debugger","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7028,"byte_end":7035,"line_start":10,"line_end":10,"column_start":38,"column_end":45},"alias_span":null,"name":"Options","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7054,"byte_end":7059,"line_start":11,"line_end":11,"column_start":17,"column_end":22},"alias_span":null,"name":"Input","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7061,"byte_end":7067,"line_start":11,"line_end":11,"column_start":24,"column_end":30},"alias_span":null,"name":"Rewind","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7069,"byte_end":7074,"line_start":11,"line_end":11,"column_start":32,"column_end":37},"alias_span":null,"name":"Token","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7076,"byte_end":7081,"line_start":11,"line_end":11,"column_start":39,"column_end":44},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7083,"byte_end":7093,"line_start":11,"line_end":11,"column_start":46,"column_end":56},"alias_span":null,"name":"ParserInfo","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7113,"byte_end":7119,"line_start":12,"line_end":12,"column_start":18,"column_end":24},"alias_span":null,"name":"Cursor","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7121,"byte_end":7127,"line_start":12,"line_end":12,"column_start":26,"column_end":32},"alias_span":null,"name":"Extent","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7145,"byte_end":7149,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"alias_span":null,"name":"Text","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7151,"byte_end":7155,"line_start":13,"line_end":13,"column_start":22,"column_end":26},"alias_span":null,"name":"Span","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7174,"byte_end":7180,"line_start":14,"line_end":14,"column_start":17,"column_end":23},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7196,"byte_end":7200,"line_start":15,"line_end":15,"column_start":15,"column_end":19},"alias_span":null,"name":"Show","value":"","parent":{"krate":0,"index":58}},{"kind":"Use","ref_id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42331,"byte_end":42339,"line_start":3,"line_end":3,"column_start":26,"column_end":34},"alias_span":null,"name":"Expected","value":"","parent":{"krate":0,"index":517}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":0,"byte_end":228,"line_start":1,"line_end":14,"column_start":1,"column_end":30},"name":"","qualname":"::","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":58},{"krate":0,"index":494},{"krate":0,"index":517},{"krate":0,"index":542},{"krate":0,"index":580},{"krate":0,"index":618},{"krate":0,"index":706}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"warn(rust_2018_idioms)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":0,"byte_end":26,"line_start":1,"line_end":1,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43}],"decl_id":null,"docs":" Macros.","sig":null,"attributes":[{"value":"macro_use","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":70,"byte_end":82,"line_start":5,"line_end":5,"column_start":1,"column_end":13}},{"value":"/ Macros.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":230,"byte_end":241,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":242,"byte_end":245,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":246,"byte_end":249,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/   * [`parse_declare!`](#parse_declare)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":250,"byte_end":292,"line_start":4,"line_end":4,"column_start":1,"column_end":43}},{"value":"/   * [`parse_error!`](#parse_error)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":293,"byte_end":331,"line_start":5,"line_end":5,"column_start":1,"column_end":39}},{"value":"/   * [`impl_show_with!`](#impl_show_with)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":332,"byte_end":376,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":377,"byte_end":380,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ [`Input`]: crate::input::Input","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":381,"byte_end":415,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/ [`Result<O, I>`]: crate::result::Result","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":416,"byte_end":459,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"/ [`Input::mark()`]: crate::input::Input::mark()","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":460,"byte_end":510,"line_start":10,"line_end":10,"column_start":1,"column_end":51}},{"value":"/ [`Input::unmark()`]: crate::input::Input::unmark()","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":511,"byte_end":565,"line_start":11,"line_end":11,"column_start":1,"column_end":55}},{"value":"/ [`Input::context()`]: crate::input::Input::context()","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":566,"byte_end":622,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ [`ParseError::push_context()`]: crate::error::ParseError::push_context()","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":623,"byte_end":699,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ [`eof()`]: crate::parsers::eof()","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\macros.rs","byte_start":700,"byte_end":736,"line_start":14,"line_end":14,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"input","qualname":"::input","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":102},{"krate":0,"index":124},{"krate":0,"index":164},{"krate":0,"index":286},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":366},{"krate":0,"index":438},{"krate":0,"index":439},{"krate":0,"index":442},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":458},{"krate":0,"index":461},{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":468},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":484},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7594,"byte_end":7599,"line_start":3,"line_end":3,"column_start":11,"column_end":16},"name":"Token","qualname":"::input::input::Token","value":"Token<I: Input>: Show + PartialEq<I::Token>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7653,"byte_end":7658,"line_start":5,"line_end":5,"column_start":11,"column_end":16},"name":"Slice","qualname":"::input::input::Slice","value":"Slice<I: Input>: Show + Length + PartialEq<I::Slice>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":760},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7909,"byte_end":7919,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"ParserInfo","qualname":"::input::input::ParserInfo","value":"ParserInfo { name, raw }","parent":null,"children":[{"krate":0,"index":761},{"krate":0,"index":762}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":761},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7930,"byte_end":7934,"line_start":13,"line_end":13,"column_start":9,"column_end":13},"name":"name","qualname":"::input::input::ParserInfo::name","value":"&'static str","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7958,"byte_end":7961,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"raw","qualname":"::input::input::ParserInfo::raw","value":"bool","parent":{"krate":0,"index":760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7982,"byte_end":7988,"line_start":17,"line_end":17,"column_start":11,"column_end":17},"name":"Rewind","qualname":"::input::input::Rewind","value":"Rewind: Sized + Input","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8075,"byte_end":8084,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"rewind_to","qualname":"::input::input::Rewind::rewind_to","value":"pub fn rewind_to(&mut Self, Self::Marker)","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":" Resets `self` to the position identified by `marker`.\n","sig":null,"attributes":[{"value":"/ Resets `self` to the position identified by `marker`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8010,"byte_end":8067,"line_start":18,"line_end":18,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8132,"byte_end":8137,"line_start":22,"line_end":22,"column_start":11,"column_end":16},"name":"Input","qualname":"::input::input::Input","value":"Input: Sized","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8156,"byte_end":8161,"line_start":23,"line_end":23,"column_start":10,"column_end":15},"name":"Token","qualname":"::input::input::Input::Token","value":"type Token: Token<Self>;","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8185,"byte_end":8190,"line_start":24,"line_end":24,"column_start":10,"column_end":15},"name":"Slice","qualname":"::input::input::Input::Slice","value":"type Slice: Slice<Self>;","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8214,"byte_end":8218,"line_start":25,"line_end":25,"column_start":10,"column_end":14},"name":"Many","qualname":"::input::input::Input::Many","value":"type Many: Length;","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8238,"byte_end":8244,"line_start":27,"line_end":27,"column_start":10,"column_end":16},"name":"Marker","qualname":"::input::input::Input::Marker","value":"type Marker: Copy;","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8261,"byte_end":8268,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"Context","qualname":"::input::input::Input::Context","value":"type Context: Show;","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8346,"byte_end":8351,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"token","qualname":"::input::input::Input::token","value":"pub fn token(&mut Self) -> Option<Self::Token>","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Returns a copy of the current token, if there is one.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the current token, if there is one.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8281,"byte_end":8338,"line_start":30,"line_end":30,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8469,"byte_end":8474,"line_start":34,"line_end":34,"column_start":8,"column_end":13},"name":"slice","qualname":"::input::input::Input::slice","value":"pub fn slice(&mut Self, usize) -> Option<Self::Slice>","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Returns a copy of the current slice of size `n`, if there is one.\n","sig":null,"attributes":[{"value":"/ Returns a copy of the current slice of size `n`, if there is one.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8392,"byte_end":8461,"line_start":33,"line_end":33,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8581,"byte_end":8585,"line_start":37,"line_end":37,"column_start":8,"column_end":12},"name":"peek","qualname":"::input::input::Input::peek","value":"pub fn peek<F>(&mut Self, F) -> bool where F: FnMut(&Self::Token) -> bool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Checks if the current token fulfills `cond`.\n","sig":null,"attributes":[{"value":"/ Checks if the current token fulfills `cond`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8525,"byte_end":8573,"line_start":36,"line_end":36,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8745,"byte_end":8755,"line_start":41,"line_end":41,"column_start":8,"column_end":18},"name":"peek_slice","qualname":"::input::input::Input::peek_slice","value":"pub fn peek_slice<F>(&mut Self, usize, F) -> bool where F: FnMut(&Self::Slice)\n-> bool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Checks if the current slice of size `n` (if any) fulfills `cond`.\n","sig":null,"attributes":[{"value":"/ Checks if the current slice of size `n` (if any) fulfills `cond`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8668,"byte_end":8737,"line_start":40,"line_end":40,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8982,"byte_end":8985,"line_start":46,"line_end":46,"column_start":8,"column_end":11},"name":"eat","qualname":"::input::input::Input::eat","value":"pub fn eat<F>(&mut Self, F) -> Option<Self::Token> where\nF: FnMut(&Self::Token) -> bool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Checks if the current token fulfills `cond`. If so, the token is\n consumed and returned. Otherwise, returns `None`.\n","sig":null,"attributes":[{"value":"/ Checks if the current token fulfills `cond`. If so, the token is","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8848,"byte_end":8916,"line_start":44,"line_end":44,"column_start":5,"column_end":73}},{"value":"/ consumed and returned. Otherwise, returns `None`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8921,"byte_end":8974,"line_start":45,"line_end":45,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9238,"byte_end":9247,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"eat_slice","qualname":"::input::input::Input::eat_slice","value":"pub fn eat_slice<F>(&mut Self, usize, F) -> Option<Self::Slice> where\nF: FnMut(&Self::Slice) -> bool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Checks if the current slice of size `n` (if any) fulfills `cond`. If so,\n the slice is consumed and returned. Otherwise, returns `None`.\n","sig":null,"attributes":[{"value":"/ Checks if the current slice of size `n` (if any) fulfills `cond`. If so,","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9083,"byte_end":9159,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ the slice is consumed and returned. Otherwise, returns `None`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9164,"byte_end":9230,"line_start":50,"line_end":50,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9468,"byte_end":9472,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"take","qualname":"::input::input::Input::take","value":"pub fn take<F>(&mut Self, F) -> Self::Many where F: FnMut(&Self::Token) ->\nbool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Takes tokens while `cond` returns true, collecting them into a\n `Self::Many` and returning it.\n","sig":null,"attributes":[{"value":"/ Takes tokens while `cond` returns true, collecting them into a","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9355,"byte_end":9421,"line_start":54,"line_end":54,"column_start":5,"column_end":71}},{"value":"/ `Self::Many` and returning it.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9426,"byte_end":9460,"line_start":55,"line_end":55,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9658,"byte_end":9662,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"skip","qualname":"::input::input::Input::skip","value":"pub fn skip<F>(&mut Self, F) -> usize where F: FnMut(&Self::Token) -> bool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Skips tokens while `cond` returns true. Returns the number of skipped\n tokens.\n","sig":null,"attributes":[{"value":"/ Skips tokens while `cond` returns true. Returns the number of skipped","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9561,"byte_end":9634,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ tokens.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9639,"byte_end":9650,"line_start":60,"line_end":60,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9816,"byte_end":9819,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"has","qualname":"::input::input::Input::has","value":"pub fn has(&mut Self, usize) -> bool","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Returns `true` if there are at least `n` tokens remaining.\n","sig":null,"attributes":[{"value":"/ Returns `true` if there are at least `n` tokens remaining.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9746,"byte_end":9808,"line_start":64,"line_end":64,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9956,"byte_end":9960,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"mark","qualname":"::input::input::Input::mark","value":"pub fn mark(&mut Self, &ParserInfo) -> Self::Marker","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Emits a marker that represents the current parse position.\n","sig":null,"attributes":[{"value":"/ Emits a marker that represents the current parse position.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9855,"byte_end":9917,"line_start":67,"line_end":67,"column_start":5,"column_end":67}},{"value":"allow(unused_variables)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":9922,"byte_end":9948,"line_start":68,"line_end":68,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":10135,"byte_end":10142,"line_start":73,"line_end":73,"column_start":8,"column_end":15},"name":"context","qualname":"::input::input::Input::context","value":"pub fn context(&mut Self, Self::Marker) -> Self::Context","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":" Returns a context to identify the input spanning from `mark` until but\n excluding the current position.\n","sig":null,"attributes":[{"value":"/ Returns a context to identify the input spanning from `mark` until but","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":10013,"byte_end":10087,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ excluding the current position.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":10092,"byte_end":10127,"line_start":72,"line_end":72,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10342,"byte_end":10348,"line_start":3,"line_end":3,"column_start":11,"column_end":17},"name":"Length","qualname":"::input::length::Length","value":"Length","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":105}],"decl_id":null,"docs":" Trait implemented for types that have a length as required by the\n [`Input::Slice`](crate::input::Input::Slice) associated type.\n","sig":null,"attributes":[{"value":"/ Trait implemented for types that have a length as required by the","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10196,"byte_end":10265,"line_start":1,"line_end":1,"column_start":1,"column_end":70}},{"value":"/ [`Input::Slice`](crate::input::Input::Slice) associated type.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10266,"byte_end":10331,"line_start":2,"line_end":2,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10783,"byte_end":10786,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"len","qualname":"::input::length::Length::len","value":"pub fn len(&Self) -> usize","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Returns the length of `self`.","sig":null,"attributes":[{"value":"/ Returns the length of `self`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10355,"byte_end":10388,"line_start":4,"line_end":4,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10393,"byte_end":10396,"line_start":5,"line_end":5,"column_start":5,"column_end":8}},{"value":"/ While the units of length are unspecified, the returned value must be","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10401,"byte_end":10474,"line_start":6,"line_end":6,"column_start":5,"column_end":78}},{"value":"/ consistent with the use of `n` in the [`Input::slice()`] method. In","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10479,"byte_end":10550,"line_start":7,"line_end":7,"column_start":5,"column_end":76}},{"value":"/ particular, if [`Input::slice(n)`] returns `Some(x)`, then `x.len()`","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10555,"byte_end":10627,"line_start":8,"line_end":8,"column_start":5,"column_end":77}},{"value":"/ must return `n`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10632,"byte_end":10652,"line_start":9,"line_end":9,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10657,"byte_end":10660,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`Input::slice()`]: crate::input::Input::slice()","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10665,"byte_end":10717,"line_start":11,"line_end":11,"column_start":5,"column_end":57}},{"value":"/ [`Input::slice(n)`]: crate::input::Input::slice()","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10722,"byte_end":10775,"line_start":12,"line_end":12,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10876,"byte_end":10884,"line_start":16,"line_end":16,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::input::length::Length::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":{"krate":0,"index":103},"children":[],"decl_id":null,"docs":" Returns true iff the length of `self` is equal to zero.\n","sig":null,"attributes":[{"value":"/ Returns true iff the length of `self` is equal to zero.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":10809,"byte_end":10868,"line_start":15,"line_end":15,"column_start":5,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15070,"byte_end":15076,"line_start":6,"line_end":6,"column_start":12,"column_end":18},"name":"Cursor","qualname":"::input::cursor::Cursor","value":"Cursor { start, items }","parent":null,"children":[{"krate":0,"index":935},{"krate":0,"index":936}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15090,"byte_end":15095,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"start","qualname":"::input::cursor::Cursor::start","value":"T","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":936},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15108,"byte_end":15113,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"name":"items","qualname":"::input::cursor::Cursor::items","value":"T","parent":{"krate":0,"index":933},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":940},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15295,"byte_end":15301,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"Extent","qualname":"::input::cursor::Extent","value":"Extent { start, end, values }","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":942},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15315,"byte_end":15320,"line_start":19,"line_end":19,"column_start":9,"column_end":14},"name":"start","qualname":"::input::cursor::Extent::start","value":"usize","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":943},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15337,"byte_end":15340,"line_start":20,"line_end":20,"column_start":9,"column_end":12},"name":"end","qualname":"::input::cursor::Extent::end","value":"usize","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":944},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15357,"byte_end":15363,"line_start":21,"line_end":21,"column_start":9,"column_end":15},"name":"values","qualname":"::input::cursor::Extent::values","value":"T","parent":{"krate":0,"index":940},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16779,"byte_end":16789,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Extent<&'_ T>>::into_owned","value":"pub fn into_owned(Self) -> Extent<T::Owned>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":212},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16966,"byte_end":16975,"line_start":93,"line_end":93,"column_start":11,"column_end":20},"name":"Indexable","qualname":"::input::cursor::Indexable","value":"Indexable: Sized","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":219}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":213},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16994,"byte_end":16997,"line_start":94,"line_end":94,"column_start":10,"column_end":13},"name":"One","qualname":"::input::cursor::Indexable::One","value":"type One: Clone;","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":17015,"byte_end":17019,"line_start":95,"line_end":95,"column_start":10,"column_end":14},"name":"Iter","qualname":"::input::cursor::Indexable::Iter","value":"type Iter: Iterator<Item = Self::One>;","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":17057,"byte_end":17061,"line_start":97,"line_end":97,"column_start":8,"column_end":12},"name":"head","qualname":"::input::cursor::Indexable::head","value":"pub fn head(&Self) -> Option<Self::One>","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":17098,"byte_end":17107,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"length_of","qualname":"::input::cursor::Indexable::length_of","value":"pub fn length_of(Self::One) -> usize","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":17143,"byte_end":17148,"line_start":99,"line_end":99,"column_start":8,"column_end":13},"name":"slice","qualname":"::input::cursor::Indexable::slice","value":"pub fn slice<R: std::ops::RangeBounds<usize>>(&Self, R) -> Option<Self>","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":17223,"byte_end":17227,"line_start":100,"line_end":100,"column_start":8,"column_end":12},"name":"iter","qualname":"::input::cursor::Indexable::iter","value":"pub fn iter(&Self) -> Self::Iter","parent":{"krate":0,"index":212},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":18911,"byte_end":18915,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"span","qualname":"<Cursor<T>>::span","value":"pub fn span(&Self, Extent<T>, Extent<T>) -> Option<Extent<T>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Extent` that spans from `a` to `b` if `a..b` is in bounds.\n","sig":null,"attributes":[{"value":"/ Returns an `Extent` that spans from `a` to `b` if `a..b` is in bounds.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":18825,"byte_end":18899,"line_start":170,"line_end":170,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":1096},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23009,"byte_end":23013,"line_start":4,"line_end":4,"column_start":12,"column_end":16},"name":"Span","qualname":"::input::text::Span","value":"Span { start, end, cursor, snippet }","parent":null,"children":[{"krate":0,"index":1098},{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1098},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23062,"byte_end":23067,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"name":"start","qualname":"::input::text::Span::start","value":"(usize, usize, usize)","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Start line/column/offset.\n","sig":null,"attributes":[{"value":"/ Start line/column/offset.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23024,"byte_end":23053,"line_start":5,"line_end":5,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":1099},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23132,"byte_end":23135,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"name":"end","qualname":"::input::text::Span::end","value":"(usize, usize, usize)","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" End line/column/offset.\n","sig":null,"attributes":[{"value":"/ End line/column/offset.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23096,"byte_end":23123,"line_start":7,"line_end":7,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23207,"byte_end":23213,"line_start":10,"line_end":10,"column_start":9,"column_end":15},"name":"cursor","qualname":"::input::text::Span::cursor","value":"std::option::Option<char>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Where the parser was pointing.\n","sig":null,"attributes":[{"value":"/ Where the parser was pointing.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23164,"byte_end":23198,"line_start":9,"line_end":9,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23276,"byte_end":23283,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"name":"snippet","qualname":"::input::text::Span::snippet","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1096},"children":[],"decl_id":null,"docs":" Snippet between start and end.\n","sig":null,"attributes":[{"value":"/ Snippet between start and end.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23233,"byte_end":23267,"line_start":11,"line_end":11,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":1125},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":25002,"byte_end":25006,"line_start":71,"line_end":71,"column_start":12,"column_end":16},"name":"Text","qualname":"::input::text::Text","value":"Text {  }","parent":null,"children":[{"krate":0,"index":1127},{"krate":0,"index":1128}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":343},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":34380,"byte_end":34384,"line_start":3,"line_end":3,"column_start":11,"column_end":15},"name":"Show","qualname":"::input::show::Show","value":"Show","parent":null,"children":[{"krate":0,"index":344}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":34394,"byte_end":34397,"line_start":4,"line_end":4,"column_start":8,"column_end":11},"name":"fmt","qualname":"::input::show::Show::fmt","value":"pub fn fmt(&Self, &mut std::fmt::Formatter) -> std::fmt::Result","parent":{"krate":0,"index":343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":380},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":36986,"byte_end":36994,"line_start":5,"line_end":5,"column_start":11,"column_end":19},"name":"Debugger","qualname":"::input::pear::Debugger","value":"Debugger<I: Input>","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37014,"byte_end":37022,"line_start":6,"line_end":6,"column_start":8,"column_end":16},"name":"on_entry","qualname":"::input::pear::Debugger::on_entry","value":"pub fn on_entry(&mut Self, &ParserInfo)","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37061,"byte_end":37068,"line_start":7,"line_end":7,"column_start":8,"column_end":15},"name":"on_exit","qualname":"::input::pear::Debugger::on_exit","value":"pub fn on_exit(&mut Self, &ParserInfo, bool, I::Context)","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":384},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37142,"byte_end":37149,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Options","qualname":"::input::pear::Options","value":"Options { stacked_context, debugger }","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":386},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37163,"byte_end":37178,"line_start":11,"line_end":11,"column_start":9,"column_end":24},"name":"stacked_context","qualname":"::input::pear::Options::stacked_context","value":"bool","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37194,"byte_end":37202,"line_start":12,"line_end":12,"column_start":9,"column_end":17},"name":"debugger","qualname":"::input::pear::Options::debugger","value":"std::option::Option<std::boxed::Box<(dyn input::pear::Debugger<I> + 'static)>>","parent":{"krate":0,"index":384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1294},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38029,"byte_end":38033,"line_start":45,"line_end":45,"column_start":12,"column_end":16},"name":"Pear","qualname":"::input::pear::Pear","value":"Pear { input, emit_error, options }","parent":null,"children":[{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38054,"byte_end":38059,"line_start":46,"line_end":46,"column_start":9,"column_end":14},"name":"input","qualname":"::input::pear::Pear::input","value":"I","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38091,"byte_end":38101,"line_start":48,"line_end":48,"column_start":9,"column_end":19},"name":"emit_error","qualname":"::input::pear::Pear::emit_error","value":"bool","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38136,"byte_end":38143,"line_start":50,"line_end":50,"column_start":9,"column_end":16},"name":"options","qualname":"::input::pear::Pear::options","value":"input::pear::Options<I>","parent":{"krate":0,"index":1294},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38195,"byte_end":38198,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Pear<I>>::new","value":"pub fn new<A>(A) -> Pear<I> where I: From<A>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7231,"byte_end":7239,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"name":"Expected","qualname":"::input::Expected","value":"error::Expected<<I as Input>::Token, <I as Input>::Slice>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7313,"byte_end":7323,"line_start":20,"line_end":20,"column_start":10,"column_end":20},"name":"ParseError","qualname":"::input::ParseError","value":"error::ParseError<<I as Input>::Context, Expected<I>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\mod.rs","byte_start":7393,"byte_end":7399,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Result","qualname":"::input::Result","value":"std::result::Result<T, ParseError<I>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"result","qualname":"::result","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":502},{"krate":0,"index":507},{"krate":0,"index":512}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40863,"byte_end":40869,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::result::Result","value":"std::result::Result<T, ParseError<C, E>>","parent":null,"children":[],"decl_id":null,"docs":" An alias to a Result where:","sig":null,"attributes":[{"value":"/ An alias to a Result where:","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40620,"byte_end":40651,"line_start":3,"line_end":3,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40652,"byte_end":40655,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ * `Ok` is `T`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40656,"byte_end":40674,"line_start":5,"line_end":5,"column_start":1,"column_end":19}},{"value":"/ * `Err` is a `ParseError` with context `C` and error `E`","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40675,"byte_end":40735,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40736,"byte_end":40739,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ For a `Result` that is parameterized only by the input type, see","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40740,"byte_end":40808,"line_start":8,"line_end":8,"column_start":1,"column_end":69}},{"value":"/ [`input::Result`](crate::input::Result).","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40809,"byte_end":40853,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40949,"byte_end":40957,"line_start":13,"line_end":13,"column_start":11,"column_end":19},"name":"AsResult","qualname":"::result::AsResult","value":"AsResult<T, C, E>","parent":null,"children":[{"krate":0,"index":506}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":40976,"byte_end":40985,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"as_result","qualname":"::result::AsResult::as_result","value":"pub fn as_result(Self) -> Result<T, C, E>","parent":{"krate":0,"index":502},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":517},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":1302},{"krate":0,"index":1308},{"krate":0,"index":1312},{"krate":0,"index":1316},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":538}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1302},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42377,"byte_end":42387,"line_start":6,"line_end":6,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::error::ParseError","value":"ParseError { error, info, stack }","parent":null,"children":[{"krate":0,"index":1305},{"krate":0,"index":1306},{"krate":0,"index":1307}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1305},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42404,"byte_end":42409,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"error","qualname":"::error::ParseError::error","value":"E","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1306},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42422,"byte_end":42426,"line_start":8,"line_end":8,"column_start":9,"column_end":13},"name":"info","qualname":"::error::ParseError::info","value":"error::ErrorInfo<C>","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1307},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42450,"byte_end":42455,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"stack","qualname":"::error::ParseError::stack","value":"std::vec::Vec<error::ErrorInfo<C>>","parent":{"krate":0,"index":1302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1316},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42514,"byte_end":42523,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"ErrorInfo","qualname":"::error::ErrorInfo","value":"ErrorInfo { parser, context }","parent":null,"children":[{"krate":0,"index":1318},{"krate":0,"index":1319}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1318},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42537,"byte_end":42543,"line_start":14,"line_end":14,"column_start":9,"column_end":15},"name":"parser","qualname":"::error::ErrorInfo::parser","value":"input::input::ParserInfo","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1319},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42565,"byte_end":42572,"line_start":15,"line_end":15,"column_start":9,"column_end":16},"name":"context","qualname":"::error::ErrorInfo::context","value":"C","parent":{"krate":0,"index":1316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42614,"byte_end":42617,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ErrorInfo<C>>::new","value":"pub fn new(ParserInfo, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":534},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42743,"byte_end":42746,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<ParseError<C, E>>::new","value":"pub fn new(ParserInfo, E, C) -> ParseError<C, E>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42912,"byte_end":42921,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"push_info","qualname":"<ParseError<C, E>>::push_info","value":"pub fn push_info(&mut Self, ParserInfo, C)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":43065,"byte_end":43069,"line_start":34,"line_end":34,"column_start":12,"column_end":16},"name":"into","qualname":"<ParseError<C, E>>::into","value":"pub fn into<E2: From<E>>(Self) -> ParseError<C, E2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":43036,"byte_end":43053,"line_start":33,"line_end":33,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsers","qualname":"::parsers","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":1326},{"krate":0,"index":1331},{"krate":0,"index":1335},{"krate":0,"index":1339},{"krate":0,"index":1343},{"krate":0,"index":1348},{"krate":0,"index":1353},{"krate":0,"index":1357},{"krate":0,"index":1361},{"krate":0,"index":1366},{"krate":0,"index":1370},{"krate":0,"index":1373},{"krate":0,"index":1377},{"krate":0,"index":1381},{"krate":0,"index":1385},{"krate":0,"index":1390},{"krate":0,"index":1396},{"krate":0,"index":1401},{"krate":0,"index":1405},{"krate":0,"index":1409},{"krate":0,"index":1414},{"krate":0,"index":1418},{"krate":0,"index":1424},{"krate":0,"index":1430},{"krate":0,"index":1434},{"krate":0,"index":1439},{"krate":0,"index":1444},{"krate":0,"index":1452},{"krate":0,"index":1461},{"krate":0,"index":1465}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":44920,"byte_end":44923,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"eat","qualname":"::parsers::eat","value":"pub fn eat<I, T>(&mut Pear<I>, T) -> Result<I::Token, I> where I: Input,\nT: Token<I>","parent":null,"children":[],"decl_id":null,"docs":" Eats the current token if it is `token`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":44898,"byte_end":44912,"line_start":42,"line_end":42,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":45259,"byte_end":45265,"line_start":54,"line_end":54,"column_start":8,"column_end":14},"name":"eat_if","qualname":"::parsers::eat_if","value":"pub fn eat_if<I, F>(&mut Pear<I>, F) -> Result<I::Token, I> where I: Input,\nF: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Eats the token `token` if `cond` holds on the current token.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":45237,"byte_end":45251,"line_start":53,"line_end":53,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1335},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":45615,"byte_end":45622,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"eat_any","qualname":"::parsers::eat_any","value":"pub fn eat_any<I: Input>(&mut Pear<I>) -> Result<I::Token, I>","parent":null,"children":[],"decl_id":null,"docs":" Eats the current token unconditionally. Fails if there are no tokens.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":45593,"byte_end":45607,"line_start":64,"line_end":64,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1339},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":45916,"byte_end":45924,"line_start":74,"line_end":74,"column_start":8,"column_end":16},"name":"skip_any","qualname":"::parsers::skip_any","value":"pub fn skip_any<I: Input>(&mut Pear<I>) -> Result<(), I>","parent":null,"children":[],"decl_id":null,"docs":" Skips the current token unconditionally. Fails if there are no tokens.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":45894,"byte_end":45908,"line_start":73,"line_end":73,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":46333,"byte_end":46342,"line_start":93,"line_end":93,"column_start":8,"column_end":17},"name":"eat_slice","qualname":"::parsers::eat_slice","value":"pub fn eat_slice<I, S>(&mut Pear<I>, S) -> Result<I::Slice, I> where I: Input,\nS: Slice<I>","parent":null,"children":[],"decl_id":null,"docs":" Eats the current slice if it is `slice`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":46311,"byte_end":46325,"line_start":92,"line_end":92,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":46672,"byte_end":46676,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"peek","qualname":"::parsers::peek","value":"pub fn peek<I, T>(&mut Pear<I>, T) -> Result<(), I> where I: Input,\nT: Token<I>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the current token is `token`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":46650,"byte_end":46664,"line_start":103,"line_end":103,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1353},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":46985,"byte_end":46997,"line_start":115,"line_end":115,"column_start":8,"column_end":20},"name":"peek_if_copy","qualname":"::parsers::peek_if_copy","value":"pub fn peek_if_copy<I, F>(&mut Pear<I>, F) -> Result<I::Token, I> where\nI: Input, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if `cond` holds for the current token.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":46963,"byte_end":46977,"line_start":114,"line_end":114,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1357},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":47337,"byte_end":47344,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"peek_if","qualname":"::parsers::peek_if","value":"pub fn peek_if<I, F>(&mut Pear<I>, F) -> Result<(), I> where I: Input,\nF: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if `cond` holds for the current token.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":47315,"byte_end":47329,"line_start":125,"line_end":125,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1361},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":47652,"byte_end":47662,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"peek_slice","qualname":"::parsers::peek_slice","value":"pub fn peek_slice<I, S>(&mut Pear<I>, S) -> Result<(), I> where I: Input,\nS: Slice<I>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the current slice is `slice`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":47630,"byte_end":47644,"line_start":136,"line_end":136,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1366},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":47979,"byte_end":47992,"line_start":148,"line_end":148,"column_start":8,"column_end":21},"name":"peek_slice_if","qualname":"::parsers::peek_slice_if","value":"pub fn peek_slice_if<I, F>(&mut Pear<I>, usize, F) -> Result<(), I> where\nI: Input, F: FnMut(&I::Slice) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Succeeds if the current slice is `slice`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":47957,"byte_end":47971,"line_start":147,"line_end":147,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1370},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":48301,"byte_end":48309,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"peek_any","qualname":"::parsers::peek_any","value":"pub fn peek_any<I: Input>(&mut Pear<I>) -> Result<I::Token, I>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current token.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":48279,"byte_end":48293,"line_start":158,"line_end":158,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":48564,"byte_end":48574,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::parsers::skip_while","value":"pub fn skip_while<I, F>(&mut Pear<I>, F) -> Result<usize, I> where I: Input,\nF: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Skips tokens while `cond` matches.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":48542,"byte_end":48556,"line_start":167,"line_end":167,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":48828,"byte_end":48838,"line_start":177,"line_end":177,"column_start":8,"column_end":18},"name":"take_while","qualname":"::parsers::take_while","value":"pub fn take_while<I, F>(&mut Pear<I>, F) -> Result<I::Many, I> where I: Input,\nF: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches and returns them. Succeeds even if no\n tokens match.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":48806,"byte_end":48820,"line_start":176,"line_end":176,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1381},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":49077,"byte_end":49081,"line_start":185,"line_end":185,"column_start":8,"column_end":12},"name":"none","qualname":"::parsers::none","value":"pub fn none<I: Input>(&mut Pear<I>) -> Result<I::Many, I>","parent":null,"children":[],"decl_id":null,"docs":" Consumes no tokens. Always succeeds. Equivalent to `take_while(|_| false)`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":49055,"byte_end":49069,"line_start":184,"line_end":184,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1385},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":49416,"byte_end":49432,"line_start":193,"line_end":193,"column_start":8,"column_end":24},"name":"take_while_slice","qualname":"::parsers::take_while_slice","value":"pub fn take_while_slice<I, F>(&mut Pear<I>, F) -> Result<I::Slice, I> where\nI: Input, F: FnMut(&I::Slice) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches on a continously growing slice\n beginning at a length of `0` and ending when `cond` fails. Returns the slice\n between `0` and `cond` failing. Errors if no such slice exists.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":49394,"byte_end":49408,"line_start":192,"line_end":192,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1390},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":50798,"byte_end":50815,"line_start":227,"line_end":227,"column_start":8,"column_end":25},"name":"take_while_window","qualname":"::parsers::take_while_window","value":"pub fn take_while_window<I, F>(&mut Pear<I>, usize, F) -> Result<I::Many, I>\nwhere I: Input + Rewind, F: FnMut(&I::Slice) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches on a window of tokens of size `n` and\n returns all of the tokens prior to the first failure to match. For example,\n given a string of \"aaab\" and a size 2 window predicate of `window == \"aa\"`,\n the return value is `\"aa\"` as the first failure to match is at `\"ab\"`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":50776,"byte_end":50790,"line_start":226,"line_end":226,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":51878,"byte_end":51900,"line_start":262,"line_end":262,"column_start":8,"column_end":30},"name":"take_some_while_window","qualname":"::parsers::take_some_while_window","value":"pub fn take_some_while_window<I, F>(&mut Pear<I>, usize, F)\n-> Result<I::Many, I> where I: Input + Rewind, F: FnMut(&I::Slice) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches on a window of tokens of size `n` and\n returns them. Fails if there no tokens match, otherwise returns all of the\n tokens before the first failure.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":51856,"byte_end":51870,"line_start":261,"line_end":261,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":52434,"byte_end":52456,"line_start":277,"line_end":277,"column_start":8,"column_end":30},"name":"take_while_some_window","qualname":"::parsers::take_while_some_window","value":"pub fn take_while_some_window<I, F>(&mut Pear<I>, usize, F)\n-> Result<I::Many, I> where I: Input + Rewind, F: FnMut(&I::Slice) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches on a window of tokens of size `n` and\n returns them. Fails if there aren't at least `n` tokens, otherwise always\n otherwise always succeeds. If no tokens match, the result will be empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":52412,"byte_end":52426,"line_start":276,"line_end":276,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":52957,"byte_end":52984,"line_start":291,"line_end":291,"column_start":8,"column_end":35},"name":"take_some_while_some_window","qualname":"::parsers::take_some_while_some_window","value":"pub fn take_some_while_some_window<I, F>(&mut Pear<I>, usize, F)\n-> Result<I::Many, I> where I: Input + Rewind, F: FnMut(&I::Slice) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches on a window of tokens of size `n` and\n returns them. Fails if there aren't at least `n` tokens or if no tokens\n match, otherwise returns all of the tokens before the first failure.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":52935,"byte_end":52949,"line_start":290,"line_end":290,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1409},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":53393,"byte_end":53409,"line_start":304,"line_end":304,"column_start":8,"column_end":24},"name":"take_until_slice","qualname":"::parsers::take_until_slice","value":"pub fn take_until_slice<I, S>(&mut Pear<I>, S) -> Result<I::Many, I> where\nI: Input + Rewind, S: Slice<I>","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches on a window of tokens of size `n` and\n returns them. Succeeds even if no tokens match.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":53371,"byte_end":53385,"line_start":303,"line_end":303,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":53711,"byte_end":53726,"line_start":313,"line_end":313,"column_start":8,"column_end":23},"name":"take_some_while","qualname":"::parsers::take_some_while","value":"pub fn take_some_while<I, F>(&mut Pear<I>, F) -> Result<I::Many, I> where\nI: Input, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches and returns them. Succeeds only if at\n least one token matched `cond`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":53689,"byte_end":53703,"line_start":312,"line_end":312,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":54108,"byte_end":54124,"line_start":327,"line_end":327,"column_start":8,"column_end":24},"name":"take_while_until","qualname":"::parsers::take_while_until","value":"pub fn take_while_until<I, T, F>(&mut Pear<I>, F, T) -> Result<I::Many, I>\nwhere I: Input, T: Token<I>, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches and the token is not `until`. Succeeds\n even if no tokens match.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":54086,"byte_end":54100,"line_start":326,"line_end":326,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1424},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":54502,"byte_end":54523,"line_start":342,"line_end":342,"column_start":8,"column_end":29},"name":"take_some_while_until","qualname":"::parsers::take_some_while_until","value":"pub fn take_some_while_until<I, T, F>(&mut Pear<I>, F, T)\n-> Result<I::Many, I> where I: Input, T: Token<I>, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Consumes tokens while `cond` matches and the token is not `until`. Succeeds\n only if at least one token matched `cond`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":54480,"byte_end":54494,"line_start":341,"line_end":341,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":54809,"byte_end":54815,"line_start":356,"line_end":356,"column_start":8,"column_end":14},"name":"take_n","qualname":"::parsers::take_n","value":"pub fn take_n<I: Input>(&mut Pear<I>, usize) -> Result<I::Many, I>","parent":null,"children":[],"decl_id":null,"docs":" Takes at most `n` tokens.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":54787,"byte_end":54801,"line_start":355,"line_end":355,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1434},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":55032,"byte_end":55044,"line_start":363,"line_end":363,"column_start":8,"column_end":20},"name":"take_n_while","qualname":"::parsers::take_n_while","value":"pub fn take_n_while<I, F>(&mut Pear<I>, usize, F) -> Result<I::Many, I> where\nI: Input, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Takes at most `n` tokens as long as `cond` holds.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":55010,"byte_end":55024,"line_start":362,"line_end":362,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":55344,"byte_end":55353,"line_start":372,"line_end":372,"column_start":8,"column_end":17},"name":"take_n_if","qualname":"::parsers::take_n_if","value":"pub fn take_n_if<I, F>(&mut Pear<I>, usize, F) -> Result<I::Many, I> where\nI: Input, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Take exactly `n` tokens, ensuring `cond` holds on all `n`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":55322,"byte_end":55336,"line_start":371,"line_end":371,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":55916,"byte_end":55925,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"delimited","qualname":"::parsers::delimited","value":"pub fn delimited<I, T, F>(&mut Pear<I>, T, F, T) -> Result<I::Many, I> where\nI: Input, T: Token<I>, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Parse a token stream that starts with `start` and ends with `end`, returning\n all of the tokens in between. The tokens in between must match `cond`.\n Succeeds even if there are no tokens between `start` and `end`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":55894,"byte_end":55908,"line_start":387,"line_end":387,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1452},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":56460,"byte_end":56474,"line_start":408,"line_end":408,"column_start":8,"column_end":22},"name":"delimited_some","qualname":"::parsers::delimited_some","value":"pub fn delimited_some<I, T, F>(&mut Pear<I>, T, F, T) -> Result<I::Many, I>\nwhere I: Input, T: Token<I>, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Parse a token stream that starts with `start` and ends with `end`, returning\n all of the tokens in between. The tokens in between must match `cond`. There\n must be at least one token between `start` and `end`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":56438,"byte_end":56452,"line_start":407,"line_end":407,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":56843,"byte_end":56846,"line_start":426,"line_end":426,"column_start":8,"column_end":11},"name":"eof","qualname":"::parsers::eof","value":"pub fn eof<I: Input>(&mut Pear<I>) -> Result<(), I>","parent":null,"children":[],"decl_id":null,"docs":" Succeeds only if the input has reached EOF.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":56821,"byte_end":56835,"line_start":425,"line_end":425,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":57085,"byte_end":57093,"line_start":435,"line_end":435,"column_start":8,"column_end":16},"name":"enclosed","qualname":"::parsers::enclosed","value":"pub fn enclosed<I, T, F>(&mut Pear<I>, T, F, T) -> Result<I::Many, I> where\nI: Input, T: Token<I>, F: FnMut(&I::Token) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Like `delimited` but keeps the `start` and `end`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\parsers.rs","byte_start":57063,"byte_end":57077,"line_start":434,"line_end":434,"column_start":1,"column_end":15}}]},{"kind":"Mod","id":{"krate":0,"index":580},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"combinators","qualname":"::combinators","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","parent":null,"children":[{"krate":0,"index":581},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":594},{"krate":0,"index":597},{"krate":0,"index":600},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":1478},{"krate":0,"index":1484},{"krate":0,"index":1493},{"krate":0,"index":1500},{"krate":0,"index":1507},{"krate":0,"index":1514},{"krate":0,"index":1527},{"krate":0,"index":1536},{"krate":0,"index":1546}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58097,"byte_end":58107,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"Collection","qualname":"::combinators::Collection","value":"Collection<A>: Default + Extend<A>","parent":null,"children":[{"krate":0,"index":606}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58163,"byte_end":58167,"line_start":9,"line_end":9,"column_start":8,"column_end":12},"name":"push","qualname":"::combinators::Collection::push","value":"pub fn push(&mut Self, A)","parent":{"krate":0,"index":604},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58138,"byte_end":58155,"line_start":8,"line_end":8,"column_start":5,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58400,"byte_end":58402,"line_start":18,"line_end":18,"column_start":8,"column_end":10},"name":"ok","qualname":"::combinators::ok","value":"pub fn ok<I, P, O>(&mut Pear<I>, P) -> Option<O> where I: Input,\nP: FnOnce(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p`, returning `Some` if it succeeds and `None` if it fails. Discards\n the error message.\n","sig":null,"attributes":[{"value":"/ Parses `p`, returning `Some` if it succeeds and `None` if it fails. Discards","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58289,"byte_end":58369,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"/ the error message.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58370,"byte_end":58392,"line_start":17,"line_end":17,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58756,"byte_end":58764,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"succeeds","qualname":"::combinators::succeeds","value":"pub fn succeeds<I, P, O>(&mut Pear<I>, P) -> bool where I: Input,\nP: FnOnce(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p`, returning `true` if it succeeds and `false` if it fails.\n Discards the error message.\n","sig":null,"attributes":[{"value":"/ Parses `p`, returning `true` if it succeeds and `false` if it fails.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58644,"byte_end":58716,"line_start":28,"line_end":28,"column_start":1,"column_end":73}},{"value":"/ Discards the error message.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58717,"byte_end":58748,"line_start":29,"line_end":29,"column_start":1,"column_end":32}}]},{"kind":"Function","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58990,"byte_end":59002,"line_start":38,"line_end":38,"column_start":8,"column_end":20},"name":"last_of_many","qualname":"::combinators::last_of_many","value":"pub fn last_of_many<I, O, P>(&mut Pear<I>, P) -> Result<O, I> where I: Input,\nP: FnMut(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses `p` until `p` fails, returning the last successful `p`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58968,"byte_end":58982,"line_start":37,"line_end":37,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1484},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":59339,"byte_end":59349,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"surrounded","qualname":"::combinators::surrounded","value":"pub fn surrounded<I, O, F, P>(&mut Pear<I>, P, F) -> Result<O, I> where\nI: Input, F: FnMut(&I::Token) -> bool, P: FnMut(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Skips all tokens that match `f` before and after a `p`, returning `p`.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":59317,"byte_end":59331,"line_start":50,"line_end":50,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1493},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":59775,"byte_end":59782,"line_start":65,"line_end":65,"column_start":8,"column_end":15},"name":"collect","qualname":"::combinators::collect","value":"pub fn collect<C, I, O, P>(&mut Pear<I>, P) -> Result<C, I> where\nC: Collection<O>, I: Input, P: FnMut(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses as many `p` as possible until EOF is reached, collecting them into a\n `C`. Fails if `p` every fails. `C` may be empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":59753,"byte_end":59767,"line_start":64,"line_end":64,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1500},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":60259,"byte_end":60271,"line_start":81,"line_end":81,"column_start":8,"column_end":20},"name":"collect_some","qualname":"::combinators::collect_some","value":"pub fn collect_some<C, I, O, P>(&mut Pear<I>, P) -> Result<C, I> where\nC: Collection<O>, I: Input, P: FnMut(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses as many `p` as possible until EOF is reached, collecting them into a\n `C`. Fails if `p` ever fails. `C` is not allowed to be empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":60237,"byte_end":60251,"line_start":80,"line_end":80,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1507},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":60721,"byte_end":60732,"line_start":96,"line_end":96,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::combinators::try_collect","value":"pub fn try_collect<C, I, O, P>(&mut Pear<I>, P) -> Result<C, I> where\nC: Collection<O>, I: Input + Rewind, P: FnMut(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses as many `p` as possible until EOF is reached or `p` fails, collecting\n them into a `C`. `C` may be empty.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":60699,"byte_end":60713,"line_start":95,"line_end":95,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1514},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":61635,"byte_end":61652,"line_start":128,"line_end":128,"column_start":8,"column_end":25},"name":"delimited_collect","qualname":"::combinators::delimited_collect","value":"pub fn delimited_collect<C, I, T, S, O, P>(&mut Pear<I>, T, P, S, T)\n-> Result<C, I> where C: Collection<O>, I: Input, T: Token<I> + Clone,\nS: Into<Option<T>>, P: FnMut(&mut Pear<I>) -> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses many `separator` delimited `p`s, the entire collection of which must\n start with `start` and end with `end`. `item` Gramatically, this is:","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":61613,"byte_end":61627,"line_start":127,"line_end":127,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1527},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":62507,"byte_end":62513,"line_start":167,"line_end":167,"column_start":8,"column_end":14},"name":"series","qualname":"::combinators::series","value":"pub fn series<C, I, S, O, P>(&mut Pear<I>, P, S) -> Result<C, I> where\nC: Collection<O>, I: Input, S: Token<I> + Clone, P: FnMut(&mut Pear<I>) ->\nResult<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses many `separator` delimited `p`s. Gramatically, this is:","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":62485,"byte_end":62499,"line_start":166,"line_end":166,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":63113,"byte_end":63128,"line_start":193,"line_end":193,"column_start":8,"column_end":23},"name":"trailing_series","qualname":"::combinators::trailing_series","value":"pub fn trailing_series<C, I, S, O, P>(&mut Pear<I>, P, S) -> Result<C, I>\nwhere C: Collection<O>, I: Input, S: Token<I> + Clone, P: FnMut(&mut Pear<I>)\n-> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses many `separator` delimited `p`s with an optional trailing separator.\n Gramatically, this is:","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":63091,"byte_end":63105,"line_start":192,"line_end":192,"column_start":1,"column_end":15}}]},{"kind":"Function","id":{"krate":0,"index":1546},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":63997,"byte_end":64012,"line_start":230,"line_end":230,"column_start":8,"column_end":23},"name":"prefixed_series","qualname":"::combinators::prefixed_series","value":"pub fn prefixed_series<C, I, T, O, P>(&mut Pear<I>, T, P, T) -> Result<C, I>\nwhere C: Collection<O>, I: Input, T: Token<I> + Clone, P: FnMut(&mut Pear<I>)\n-> Result<O, I>","parent":null,"children":[],"decl_id":null,"docs":" Parses many `separator` delimited `p`s that are collectively prefixed with\n `prefix`. Gramatically, this is:","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":63975,"byte_end":63989,"line_start":229,"line_end":229,"column_start":1,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64501,"byte_end":64509,"line_start":9,"line_end":9,"column_start":5,"column_end":13},"name":"Borrowed","qualname":"::expected::CowInlineString::Borrowed","value":"CowInlineString::Borrowed(&'static str)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1558},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64529,"byte_end":64535,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Inline","qualname":"::expected::CowInlineString::Inline","value":"CowInlineString::Inline(InlinableString)","parent":{"krate":0,"index":1554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1554},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64479,"byte_end":64494,"line_start":8,"line_end":8,"column_start":10,"column_end":25},"name":"CowInlineString","qualname":"::expected::CowInlineString","value":"pub enum CowInlineString { Borrowed(&'static str), Inline(InlinableString), }","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1558}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":638},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65115,"byte_end":65120,"line_start":36,"line_end":36,"column_start":5,"column_end":10},"name":"Token","qualname":"::expected::Expected::Token","value":"Expected::Token(Option<InlinableString>, Option<Token>)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65166,"byte_end":65171,"line_start":37,"line_end":37,"column_start":5,"column_end":10},"name":"Slice","qualname":"::expected::Expected::Slice","value":"Expected::Slice(Option<InlinableString>, Option<Slice>)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65217,"byte_end":65220,"line_start":38,"line_end":38,"column_start":5,"column_end":8},"name":"Eof","qualname":"::expected::Expected::Eof","value":"Expected::Eof(Option<Token>)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":649},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65241,"byte_end":65246,"line_start":39,"line_end":39,"column_start":5,"column_end":10},"name":"Other","qualname":"::expected::Expected::Other","value":"Expected::Other(CowInlineString)","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":652},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65269,"byte_end":65275,"line_start":40,"line_end":40,"column_start":5,"column_end":11},"name":"Elided","qualname":"::expected::Expected::Elided","value":"Expected::Elided","parent":{"krate":0,"index":635},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":635},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65086,"byte_end":65094,"line_start":35,"line_end":35,"column_start":10,"column_end":18},"name":"Expected","qualname":"::expected::Expected","value":"pub enum Expected<Token, Slice> {\n    Token(Option<InlinableString>, Option<Token>),\n    Slice(Option<InlinableString>, Option<Slice>),\n    Eof(Option<Token>),\n    Other(CowInlineString),\n    Elided,\n}","parent":null,"children":[{"krate":0,"index":638},{"krate":0,"index":642},{"krate":0,"index":646},{"krate":0,"index":649},{"krate":0,"index":652}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65334,"byte_end":65339,"line_start":44,"line_end":44,"column_start":12,"column_end":17},"name":"token","qualname":"<Expected<Token, Slice>>::token","value":"pub fn token<T: Show>(Option<&T>, Option<Token>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65535,"byte_end":65538,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"eof","qualname":"<Expected<Token, Slice>>::eof","value":"pub fn eof(Option<Token>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65664,"byte_end":65669,"line_start":55,"line_end":55,"column_start":12,"column_end":17},"name":"slice","qualname":"<Expected<Token, Slice>>::slice","value":"pub fn slice<S: Show>(Option<&S>, Option<Slice>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65911,"byte_end":65914,"line_start":62,"line_end":62,"column_start":12,"column_end":15},"name":"map","qualname":"<Expected<Token, Slice>>::map","value":"pub fn map<FT, FS, T, S>(Self, FT, FS) -> Expected<T, S> where FT: Fn(Token)\n-> T, FS: Fn(Slice) -> S","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66374,"byte_end":66384,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Expected<T, &'_ S>>::into_owned","value":"pub fn into_owned(Self) -> Expected<T::Owned, S::Owned>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"debug","qualname":"::debug","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":723},{"krate":0,"index":726},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":735},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":750},{"krate":0,"index":752},{"krate":0,"index":754},{"krate":0,"index":756}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":74121,"byte_end":74133,"line_start":132,"line_end":132,"column_start":12,"column_end":24},"name":"TreeDebugger","qualname":"::debug::TreeDebugger","value":"TreeDebugger {  }","parent":null,"children":[{"krate":0,"index":753}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":74192,"byte_end":74195,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<TreeDebugger>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7742,"byte_end":7743,"line_start":7,"line_end":7,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7816,"byte_end":7817,"line_start":9,"line_end":9,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":11660,"byte_end":11663,"line_start":55,"line_end":55,"column_start":20,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":11886,"byte_end":11892,"line_start":69,"line_end":69,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15147,"byte_end":15153,"line_start":11,"line_end":11,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15399,"byte_end":15405,"line_start":24,"line_end":24,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15536,"byte_end":15542,"line_start":30,"line_end":30,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":192},{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15675,"byte_end":15681,"line_start":38,"line_end":38,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16452,"byte_end":16458,"line_start":71,"line_end":71,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16555,"byte_end":16561,"line_start":77,"line_end":77,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16755,"byte_end":16761,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":18684,"byte_end":18690,"line_start":163,"line_end":163,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":18809,"byte_end":18815,"line_start":169,"line_end":169,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":19236,"byte_end":19242,"line_start":179,"line_end":179,"column_start":58,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":274},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":22709,"byte_end":22715,"line_start":288,"line_end":288,"column_start":59,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23355,"byte_end":23359,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":25085,"byte_end":25089,"line_start":76,"line_end":76,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":25202,"byte_end":25206,"line_start":82,"line_end":82,"column_start":17,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":25339,"byte_end":25343,"line_start":88,"line_end":88,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":327},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":34831,"byte_end":34837,"line_start":21,"line_end":21,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":352}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":35404,"byte_end":35407,"line_start":44,"line_end":44,"column_start":56,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":36021,"byte_end":36024,"line_start":67,"line_end":67,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37260,"byte_end":37267,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37546,"byte_end":37553,"line_start":24,"line_end":24,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38174,"byte_end":38178,"line_start":53,"line_end":53,"column_start":16,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38313,"byte_end":38317,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38472,"byte_end":38476,"line_start":65,"line_end":65,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38609,"byte_end":38613,"line_start":72,"line_end":72,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38728,"byte_end":38732,"line_start":78,"line_end":78,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420},{"krate":0,"index":421},{"krate":0,"index":423},{"krate":0,"index":425},{"krate":0,"index":427},{"krate":0,"index":429},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":40481,"byte_end":40485,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":41051,"byte_end":41052,"line_start":17,"line_end":17,"column_start":37,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":41183,"byte_end":41189,"line_start":24,"line_end":24,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42588,"byte_end":42597,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42713,"byte_end":42723,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":43308,"byte_end":43318,"line_start":43,"line_end":43,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58281,"byte_end":58282,"line_start":14,"line_end":14,"column_start":51,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64581,"byte_end":64596,"line_start":13,"line_end":13,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64820,"byte_end":64835,"line_start":23,"line_end":23,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64961,"byte_end":64976,"line_start":29,"line_end":29,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65298,"byte_end":65306,"line_start":43,"line_end":43,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":657},{"krate":0,"index":660}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65628,"byte_end":65636,"line_start":54,"line_end":54,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65875,"byte_end":65883,"line_start":61,"line_end":61,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66345,"byte_end":66353,"line_start":77,"line_end":77,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66515,"byte_end":66523,"line_start":83,"line_end":83,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":685}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66743,"byte_end":66751,"line_start":91,"line_end":91,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66939,"byte_end":66947,"line_start":98,"line_end":98,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":67150,"byte_end":67158,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":697}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":67874,"byte_end":67882,"line_start":125,"line_end":125,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":68323,"byte_end":68331,"line_start":137,"line_end":137,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":71102,"byte_end":71106,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":740},{"krate":0,"index":741},{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":72283,"byte_end":72287,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":73993,"byte_end":73997,"line_start":126,"line_end":126,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":751}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":74166,"byte_end":74178,"line_start":136,"line_end":136,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":74283,"byte_end":74295,"line_start":142,"line_end":142,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":91,"byte_end":97,"line_start":5,"line_end":5,"column_start":22,"column_end":28},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":107,"byte_end":112,"line_start":6,"line_end":6,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":58}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":122,"byte_end":128,"line_start":7,"line_end":7,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":494}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":138,"byte_end":143,"line_start":8,"line_end":8,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":517}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":153,"byte_end":160,"line_start":9,"line_end":9,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":542}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":170,"byte_end":181,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":580}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\lib.rs","byte_start":222,"byte_end":227,"line_start":14,"line_end":14,"column_start":24,"column_end":29},"ref_id":{"krate":0,"index":706}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7611,"byte_end":7615,"line_start":3,"line_end":3,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":343},"to":{"krate":0,"index":67}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7618,"byte_end":7627,"line_start":3,"line_end":3,"column_start":35,"column_end":44},"kind":"SuperTrait","from":{"krate":2,"index":2531},"to":{"krate":0,"index":67}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7670,"byte_end":7674,"line_start":5,"line_end":5,"column_start":28,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":343},"to":{"krate":0,"index":69}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7677,"byte_end":7683,"line_start":5,"line_end":5,"column_start":35,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":103},"to":{"krate":0,"index":69}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7686,"byte_end":7695,"line_start":5,"line_end":5,"column_start":44,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2531},"to":{"krate":0,"index":69}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7742,"byte_end":7743,"line_start":7,"line_end":7,"column_start":32,"column_end":33},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":73},"to":{"krate":0,"index":67}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7816,"byte_end":7817,"line_start":9,"line_end":9,"column_start":32,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":76},"to":{"krate":0,"index":69}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7990,"byte_end":7995,"line_start":17,"line_end":17,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":7998,"byte_end":8003,"line_start":17,"line_end":17,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":0,"index":79},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\input.rs","byte_start":8139,"byte_end":8144,"line_start":22,"line_end":22,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":79}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":11660,"byte_end":11663,"line_start":55,"line_end":55,"column_start":20,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":103}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\length.rs","byte_start":11886,"byte_end":11892,"line_start":69,"line_end":69,"column_start":17,"column_end":23},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":7314},"to":{"krate":0,"index":103}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15147,"byte_end":15153,"line_start":11,"line_end":11,"column_start":27,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":933},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15399,"byte_end":15405,"line_start":24,"line_end":24,"column_start":29,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15536,"byte_end":15542,"line_start":30,"line_end":30,"column_start":29,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":15675,"byte_end":15681,"line_start":38,"line_end":38,"column_start":37,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":940},"to":{"krate":2,"index":2531}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16452,"byte_end":16458,"line_start":71,"line_end":71,"column_start":20,"column_end":26},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":940},"to":{"krate":0,"index":103}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16555,"byte_end":16561,"line_start":77,"line_end":77,"column_start":24,"column_end":30},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":940},"to":{"krate":0,"index":343}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16755,"byte_end":16761,"line_start":83,"line_end":83,"column_start":27,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":940},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":16977,"byte_end":16982,"line_start":93,"line_end":93,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":2885},"to":{"krate":0,"index":212}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":18684,"byte_end":18690,"line_start":163,"line_end":163,"column_start":17,"column_end":23},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":18809,"byte_end":18815,"line_start":169,"line_end":169,"column_start":29,"column_end":35},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":19236,"byte_end":19242,"line_start":179,"line_end":179,"column_start":58,"column_end":64},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":933},"to":{"krate":0,"index":79}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\cursor.rs","byte_start":22709,"byte_end":22715,"line_start":288,"line_end":288,"column_start":59,"column_end":65},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":933},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":23355,"byte_end":23359,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1096},"to":{"krate":0,"index":343}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":25085,"byte_end":25089,"line_start":76,"line_end":76,"column_start":28,"column_end":32},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1125},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":25202,"byte_end":25206,"line_start":82,"line_end":82,"column_start":17,"column_end":21},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1125},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\text.rs","byte_start":25339,"byte_end":25343,"line_start":88,"line_end":88,"column_start":20,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1125},"to":{"krate":0,"index":79}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":34831,"byte_end":34837,"line_start":21,"line_end":21,"column_start":24,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":40256},"to":{"krate":0,"index":343}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":35404,"byte_end":35407,"line_start":44,"line_end":44,"column_start":56,"column_end":59},"kind":{"Impl":{"id":21}},"from":{"krate":5,"index":544},"to":{"krate":0,"index":343}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\show.rs","byte_start":36021,"byte_end":36024,"line_start":67,"line_end":67,"column_start":24,"column_end":27},"kind":{"Impl":{"id":22}},"from":{"krate":5,"index":6801},"to":{"krate":0,"index":343}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37260,"byte_end":37267,"line_start":15,"line_end":15,"column_start":24,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":37546,"byte_end":37553,"line_start":24,"line_end":24,"column_start":28,"column_end":35},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":384},"to":{"krate":2,"index":2858}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38174,"byte_end":38178,"line_start":53,"line_end":53,"column_start":16,"column_end":20},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38313,"byte_end":38317,"line_start":59,"line_end":59,"column_start":28,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38472,"byte_end":38476,"line_start":65,"line_end":65,"column_start":36,"column_end":40},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38609,"byte_end":38613,"line_start":72,"line_end":72,"column_start":39,"column_end":43},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1294},"to":{"krate":2,"index":3104}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":38728,"byte_end":38732,"line_start":78,"line_end":78,"column_start":26,"column_end":30},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":79}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\input\\pear.rs","byte_start":40481,"byte_end":40485,"line_start":154,"line_end":154,"column_start":36,"column_end":40},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1294},"to":{"krate":0,"index":77}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":41051,"byte_end":41052,"line_start":17,"line_end":17,"column_start":37,"column_end":38},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":508},"to":{"krate":0,"index":502}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\result.rs","byte_start":41183,"byte_end":41189,"line_start":24,"line_end":24,"column_start":37,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":498},"to":{"krate":0,"index":502}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42588,"byte_end":42597,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":42713,"byte_end":42723,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\error.rs","byte_start":43308,"byte_end":43318,"line_start":43,"line_end":43,"column_start":59,"column_end":69},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1302},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58112,"byte_end":58119,"line_start":7,"line_end":7,"column_start":26,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":604}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58122,"byte_end":58128,"line_start":7,"line_end":7,"column_start":36,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":7236},"to":{"krate":0,"index":604}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\combinators.rs","byte_start":58281,"byte_end":58282,"line_start":14,"line_end":14,"column_start":51,"column_end":52},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":609},"to":{"krate":0,"index":604}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64581,"byte_end":64596,"line_start":13,"line_end":13,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1554},"to":{"krate":2,"index":3091}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64820,"byte_end":64835,"line_start":23,"line_end":23,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1554},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":64961,"byte_end":64976,"line_start":29,"line_end":29,"column_start":26,"column_end":41},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1554},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65298,"byte_end":65306,"line_start":43,"line_end":43,"column_start":20,"column_end":28},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65628,"byte_end":65636,"line_start":54,"line_end":54,"column_start":20,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":65875,"byte_end":65883,"line_start":61,"line_end":61,"column_start":20,"column_end":28},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66345,"byte_end":66353,"line_start":77,"line_end":77,"column_start":39,"column_end":47},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66515,"byte_end":66523,"line_start":83,"line_end":83,"column_start":29,"column_end":37},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66743,"byte_end":66751,"line_start":91,"line_end":91,"column_start":38,"column_end":46},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":66939,"byte_end":66947,"line_start":98,"line_end":98,"column_start":35,"column_end":43},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":67150,"byte_end":67158,"line_start":105,"line_end":105,"column_start":51,"column_end":59},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":8969}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":67874,"byte_end":67882,"line_start":125,"line_end":125,"column_start":36,"column_end":44},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":2501}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\expected.rs","byte_start":68323,"byte_end":68331,"line_start":137,"line_end":137,"column_start":41,"column_end":49},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":635},"to":{"krate":2,"index":8976}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":71102,"byte_end":71106,"line_start":21,"line_end":21,"column_start":9,"column_end":13},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":72283,"byte_end":72287,"line_start":70,"line_end":70,"column_start":6,"column_end":10},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":73993,"byte_end":73997,"line_start":126,"line_end":126,"column_start":6,"column_end":10},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":746},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":74166,"byte_end":74178,"line_start":136,"line_end":136,"column_start":6,"column_end":18},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":752},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\pear-0.2.3\\src\\debug.rs","byte_start":74283,"byte_end":74295,"line_start":142,"line_end":142,"column_start":32,"column_end":44},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":752},"to":{"krate":0,"index":380}}]}