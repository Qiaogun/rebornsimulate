{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0","program":"C:\\Users\\Qiao\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","cpuid_bool","--edition=2018","C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=f8905c1226d73305","-C","extra-filename=-f8905c1226d73305","--out-dir","g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps","-L","dependency=g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Qiao\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps\\libcpuid_bool-f8905c1226d73305.rmeta"},"prelude":{"crate_id":{"name":"cpuid_bool","disambiguator":[15644743555818537383,0]},"crate_root":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src","external_crates":[{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}}],"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":5356,"line_start":1,"line_end":152,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":5356,"line_start":1,"line_end":152,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3}],"decl_id":null,"docs":" Macro for checking CPU capabilities at runtime.","sig":null,"attributes":[{"value":"/ Macro for checking CPU capabilities at runtime.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":0,"byte_end":51,"line_start":1,"line_end":1,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":52,"byte_end":55,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":56,"byte_end":69,"line_start":3,"line_end":3,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":70,"byte_end":77,"line_start":4,"line_end":4,"column_start":1,"column_end":8}},{"value":"/ // This macro creates `cpuid_aes_sha` module","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ cpuid_bool::new!(cpuid_aes_sha, \"aes\", \"sha\");","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":127,"byte_end":177,"line_start":6,"line_end":6,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":178,"byte_end":181,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ // `token` is a Zero Sized Type value, which guarantees","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":182,"byte_end":241,"line_start":8,"line_end":8,"column_start":1,"column_end":60}},{"value":"/ // that underlying static storage got properly initialized,","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":242,"byte_end":305,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ // which allows to omit initialization branch","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":306,"byte_end":355,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/ let token: cpuid_aes_sha::InitToken = cpuid_aes_sha::init();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":356,"byte_end":420,"line_start":11,"line_end":11,"column_start":1,"column_end":65}},{"value":"/ if token.get() {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":421,"byte_end":441,"line_start":12,"line_end":12,"column_start":1,"column_end":21}},{"value":"/     println!(\"CPU supports both SHA and AES extensions\");","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":442,"byte_end":503,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":504,"byte_end":516,"line_start":14,"line_end":14,"column_start":1,"column_end":13}},{"value":"/     println!(\"SHA and AES extensions are not supported\");","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":517,"byte_end":578,"line_start":15,"line_end":15,"column_start":1,"column_end":62}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":579,"byte_end":584,"line_start":16,"line_end":16,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":585,"byte_end":588,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // If stored value needed only once you can get stored value","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":589,"byte_end":653,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ // omitting the token","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":654,"byte_end":679,"line_start":19,"line_end":19,"column_start":1,"column_end":26}},{"value":"/ let val = cpuid_aes_sha::get();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":680,"byte_end":715,"line_start":20,"line_end":20,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(val, token.get());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":716,"byte_end":749,"line_start":21,"line_end":21,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":750,"byte_end":753,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ // Additionally you can get both token and value","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":754,"byte_end":806,"line_start":23,"line_end":23,"column_start":1,"column_end":53}},{"value":"/ let (token, val) = cpuid_aes_sha::init_get();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":807,"byte_end":856,"line_start":24,"line_end":24,"column_start":1,"column_end":50}},{"value":"/ assert_eq!(val, token.get());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":857,"byte_end":890,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":891,"byte_end":898,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/ Note that if all tested target features are enabled via compiler options","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":899,"byte_end":975,"line_start":27,"line_end":27,"column_start":1,"column_end":77}},{"value":"/ (e.g. by using `RUSTFLAGS`), the `get` method will always return `true`","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":976,"byte_end":1051,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ and `init` will not use CPUID instruction. Such behavior allows","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":1052,"byte_end":1119,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/ compiler to completely eliminate fallback code.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":1120,"byte_end":1171,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":1172,"byte_end":1175,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ After first call macro caches result and returns it in subsequent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":1176,"byte_end":1245,"line_start":32,"line_end":32,"column_start":1,"column_end":70}},{"value":"/ calls, thus runtime overhead for them is minimal.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":1246,"byte_end":1299,"line_start":33,"line_end":33,"column_start":1,"column_end":54}},{"value":"no_std","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\cpuid-bool-0.2.0\\src\\lib.rs","byte_start":1300,"byte_end":1310,"line_start":34,"line_end":34,"column_start":1,"column_end":11}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}