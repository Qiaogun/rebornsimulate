{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2","program":"C:\\Users\\Qiao\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","spin","C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"mutex\"","--cfg","feature=\"spin_mutex\"","-C","metadata=a94652a0abf36014","-C","extra-filename=-a94652a0abf36014","--out-dir","g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps","-L","dependency=g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Qiao\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"g:\\rebornsimulate\\backend\\target\\rls\\debug\\deps\\libspin-a94652a0abf36014.rmeta"},"prelude":{"crate_id":{"name":"spin","disambiguator":[11539847519522456646,0]},"crate_root":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src","external_crates":[{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11670460313399248794,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[8277854152057768692,0]}},{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6312854529260013001,0]}}],"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":8757,"line_start":1,"line_end":186,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9627,"byte_end":9636,"line_start":21,"line_end":21,"column_start":22,"column_end":31},"alias_span":null,"name":"SpinMutex","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9638,"byte_end":9652,"line_start":21,"line_end":21,"column_start":33,"column_end":47},"alias_span":null,"name":"SpinMutexGuard","value":"","parent":{"krate":0,"index":4}},{"kind":"Use","ref_id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2864,"byte_end":2874,"line_start":82,"line_end":82,"column_start":16,"column_end":26},"alias_span":null,"name":"MutexGuard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":3002,"byte_end":3006,"line_start":86,"line_end":86,"column_start":17,"column_end":21},"alias_span":null,"name":"Spin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":3002,"byte_end":3006,"line_start":86,"line_end":86,"column_start":17,"column_end":21},"alias_span":null,"name":"Spin","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":3008,"byte_end":3021,"line_start":86,"line_end":86,"column_start":23,"column_end":36},"alias_span":null,"name":"RelaxStrategy","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":0,"byte_end":8757,"line_start":1,"line_end":186,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":203},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":224}],"decl_id":null,"docs":" This crate provides [spin-based](https://en.wikipedia.org/wiki/Spinlock) versions of the\n primitives in `std::sync` and `std::lazy`. Because synchronization is done through spinning,\n the primitives are suitable for use in `no_std` environments.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":50,"byte_end":56,"line_start":1,"line_end":1,"column_start":51,"column_end":57}},{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":98,"byte_end":120,"line_start":3,"line_end":3,"column_start":1,"column_end":23}},{"value":"/ This crate provides [spin-based](https://en.wikipedia.org/wiki/Spinlock) versions of the","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":122,"byte_end":214,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ primitives in `std::sync` and `std::lazy`. Because synchronization is done through spinning,","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":215,"byte_end":311,"line_start":6,"line_end":6,"column_start":1,"column_end":97}},{"value":"/ the primitives are suitable for use in `no_std` environments.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":312,"byte_end":377,"line_start":7,"line_end":7,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":378,"byte_end":381,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":382,"byte_end":396,"line_start":9,"line_end":9,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":397,"byte_end":400,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - `Mutex`, `RwLock`, `Once`/`SyncOnceCell`, and `SyncLazy` equivalents","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":401,"byte_end":475,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":476,"byte_end":479,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - Support for `no_std` environments","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":480,"byte_end":519,"line_start":13,"line_end":13,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":520,"byte_end":523,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ - [`lock_api`](https://crates.io/crates/lock_api) compatibility","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":524,"byte_end":591,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":592,"byte_end":595,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - Upgradeable `RwLock` guards","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":596,"byte_end":629,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":630,"byte_end":633,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ - Guards can be sent and shared between threads","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":634,"byte_end":685,"line_start":19,"line_end":19,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":686,"byte_end":689,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - Guard leaking","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":690,"byte_end":709,"line_start":21,"line_end":21,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":710,"byte_end":713,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - Ticket locks","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":714,"byte_end":732,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":733,"byte_end":736,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - Different strategies for dealing with contention","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":737,"byte_end":791,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":792,"byte_end":795,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Relationship with `std::sync`","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":796,"byte_end":831,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":832,"byte_end":835,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ While `spin` is not a drop-in replacement for `std::sync` (and","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":836,"byte_end":902,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ [should not be considered as such](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html))","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":903,"byte_end":1014,"line_start":30,"line_end":30,"column_start":1,"column_end":112}},{"value":"/ an effort is made to keep this crate reasonably consistent with `std::sync`.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1015,"byte_end":1095,"line_start":31,"line_end":31,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1096,"byte_end":1099,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Many of the types defined in this crate have 'additional capabilities' when compared to `std::sync`:","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1100,"byte_end":1204,"line_start":33,"line_end":33,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1205,"byte_end":1208,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ - Because spinning does not depend on the thread-driven model of `std::sync`, guards ([`MutexGuard`],","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1209,"byte_end":1314,"line_start":35,"line_end":35,"column_start":1,"column_end":106}},{"value":"/   [`RwLockReadGuard`], [`RwLockWriteGuard`], etc.) may be sent and shared between threads.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1315,"byte_end":1409,"line_start":36,"line_end":36,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1410,"byte_end":1413,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ - [`RwLockUpgradableGuard`] supports being upgraded into a [`RwLockWriteGuard`].","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1414,"byte_end":1498,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1499,"byte_end":1502,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ - Guards support [leaking](https://doc.rust-lang.org/nomicon/leaking.html).","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1503,"byte_end":1582,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1583,"byte_end":1586,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - [`Once`] owns the value returned by its `call_once` initializer.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1587,"byte_end":1657,"line_start":42,"line_end":42,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1658,"byte_end":1661,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ - [`RwLock`] supports counting readers and writers.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1662,"byte_end":1717,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1718,"byte_end":1721,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Conversely, the types in this crate do not have some of the features `std::sync` has:","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1722,"byte_end":1811,"line_start":46,"line_end":46,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1812,"byte_end":1815,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ - Locks do not track [panic poisoning](https://doc.rust-lang.org/nomicon/poisoning.html).","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1816,"byte_end":1909,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1910,"byte_end":1913,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ ## Feature flags","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1914,"byte_end":1934,"line_start":50,"line_end":50,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1935,"byte_end":1938,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The crate comes with a few feature flags that you may wish to use.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":1939,"byte_end":2009,"line_start":52,"line_end":52,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2010,"byte_end":2013,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ - `lock_api` enables support for [`lock_api`](https://crates.io/crates/lock_api)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2014,"byte_end":2098,"line_start":54,"line_end":54,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2099,"byte_end":2102,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ - `ticket_mutex` uses a ticket lock for the implementation of `Mutex`","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2103,"byte_end":2176,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2177,"byte_end":2180,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ - `std` enables support for thread yielding instead of spinning","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2181,"byte_end":2248,"line_start":58,"line_end":58,"column_start":1,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"mutex","qualname":"::mutex","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","parent":null,"children":[{"krate":0,"index":5},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":146},{"krate":0,"index":149},{"krate":0,"index":153},{"krate":0,"index":158},{"krate":0,"index":162},{"krate":0,"index":170},{"krate":0,"index":174},{"krate":0,"index":178},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":190},{"krate":0,"index":194},{"krate":0,"index":199}],"decl_id":null,"docs":" Locks that have the same behaviour as a mutex.","sig":null,"attributes":[{"value":"cfg(feature = \"mutex\")","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2488,"byte_end":2513,"line_start":69,"line_end":69,"column_start":1,"column_end":26}},{"value":"/ Locks that have the same behaviour as a mutex.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":8759,"byte_end":8809,"line_start":1,"line_end":1,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":8810,"byte_end":8813,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The [`Mutex`] in the root of the crate, can be configured using the `ticket_mutex` feature.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":8814,"byte_end":8909,"line_start":3,"line_end":3,"column_start":1,"column_end":96}},{"value":"/ If it's enabled, [`TicketMutex`] and [`TicketMutexGuard`] will be re-exported as [`Mutex`]","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":8910,"byte_end":9004,"line_start":4,"line_end":4,"column_start":1,"column_end":95}},{"value":"/ and [`MutexGuard`], otherwise the [`SpinMutex`] and guard will be re-exported.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9005,"byte_end":9087,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9088,"byte_end":9091,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ `ticket_mutex` is disabled by default.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9092,"byte_end":9134,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9135,"byte_end":9138,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Mutex`]: ../struct.Mutex.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9139,"byte_end":9174,"line_start":9,"line_end":9,"column_start":1,"column_end":36}},{"value":"/ [`MutexGuard`]: ../struct.MutexGuard.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9175,"byte_end":9220,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"/ [`TicketMutex`]: ./struct.TicketMutex.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9221,"byte_end":9267,"line_start":11,"line_end":11,"column_start":1,"column_end":47}},{"value":"/ [`TicketMutexGuard`]: ./struct.TicketMutexGuard.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9268,"byte_end":9324,"line_start":12,"line_end":12,"column_start":1,"column_end":57}},{"value":"/ [`SpinMutex`]: ./struct.SpinMutex.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9325,"byte_end":9367,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"/ [`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9368,"byte_end":9420,"line_start":14,"line_end":14,"column_start":1,"column_end":53}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"spin","qualname":"::mutex::spin","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":37},{"krate":0,"index":43},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":62},{"krate":0,"index":69},{"krate":0,"index":75},{"krate":0,"index":79},{"krate":0,"index":83},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":95},{"krate":0,"index":100},{"krate":0,"index":104}],"decl_id":null,"docs":" A naïve spinning mutex.","sig":null,"attributes":[{"value":"cfg(feature = \"spin_mutex\")","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9422,"byte_end":9452,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ A naïve spinning mutex.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18190,"byte_end":18218,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18219,"byte_end":18222,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Waiting threads hammer an atomic variable until it becomes available. Best-case latency is low, but worst-case","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18223,"byte_end":18337,"line_start":3,"line_end":3,"column_start":1,"column_end":115}},{"value":"/ latency is theoretically infinite.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18338,"byte_end":18376,"line_start":4,"line_end":4,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19714,"byte_end":19723,"line_start":62,"line_end":62,"column_start":12,"column_end":21},"name":"SpinMutex","qualname":"::mutex::spin::SpinMutex","value":"SpinMutex {  }","parent":null,"children":[{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42}],"decl_id":null,"docs":" A [spin lock](https://en.m.wikipedia.org/wiki/Spinlock) providing mutually exclusive access to data.","sig":null,"attributes":[{"value":"/ A [spin lock](https://en.m.wikipedia.org/wiki/Spinlock) providing mutually exclusive access to data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18554,"byte_end":18658,"line_start":15,"line_end":15,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18659,"byte_end":18662,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18663,"byte_end":18676,"line_start":17,"line_end":17,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18677,"byte_end":18680,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18681,"byte_end":18688,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18689,"byte_end":18702,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18703,"byte_end":18706,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18707,"byte_end":18758,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18759,"byte_end":18762,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ // Modify the data","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18763,"byte_end":18785,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"/ *lock.lock() = 2;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18786,"byte_end":18807,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18808,"byte_end":18811,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ // Read the data","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18812,"byte_end":18832,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/ let answer = *lock.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18833,"byte_end":18863,"line_start":28,"line_end":28,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(answer, 2);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18864,"byte_end":18890,"line_start":29,"line_end":29,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18891,"byte_end":18898,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18899,"byte_end":18902,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Thread safety example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18903,"byte_end":18930,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18931,"byte_end":18934,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18935,"byte_end":18942,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18943,"byte_end":18956,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"/ use std::sync::{Arc, Barrier};","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18957,"byte_end":18991,"line_start":36,"line_end":36,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18992,"byte_end":18995,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let thread_count = 1000;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":18996,"byte_end":19024,"line_start":38,"line_end":38,"column_start":1,"column_end":29}},{"value":"/ let spin_mutex = Arc::new(spin::mutex::SpinMutex::<_>::new(0));","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19025,"byte_end":19092,"line_start":39,"line_end":39,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19093,"byte_end":19096,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // We use a barrier to ensure the readout happens after all writing","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19097,"byte_end":19168,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"/ let barrier = Arc::new(Barrier::new(thread_count + 1));","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19169,"byte_end":19228,"line_start":42,"line_end":42,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19229,"byte_end":19232,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ for _ in (0..thread_count) {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19233,"byte_end":19265,"line_start":44,"line_end":44,"column_start":1,"column_end":33}},{"value":"/     let my_barrier = barrier.clone();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19266,"byte_end":19307,"line_start":45,"line_end":45,"column_start":1,"column_end":42}},{"value":"/     let my_lock = spin_mutex.clone();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19308,"byte_end":19349,"line_start":46,"line_end":46,"column_start":1,"column_end":42}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19350,"byte_end":19386,"line_start":47,"line_end":47,"column_start":1,"column_end":37}},{"value":"/         let mut guard = my_lock.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19387,"byte_end":19430,"line_start":48,"line_end":48,"column_start":1,"column_end":44}},{"value":"/         *guard += 1;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19431,"byte_end":19455,"line_start":49,"line_end":49,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19456,"byte_end":19459,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/         // Release the lock to prevent a deadlock","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19460,"byte_end":19513,"line_start":51,"line_end":51,"column_start":1,"column_end":54}},{"value":"/         drop(guard);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19514,"byte_end":19538,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"/         my_barrier.wait();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19539,"byte_end":19569,"line_start":53,"line_end":53,"column_start":1,"column_end":31}},{"value":"/     });","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19570,"byte_end":19581,"line_start":54,"line_end":54,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19582,"byte_end":19587,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19588,"byte_end":19591,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ barrier.wait();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19592,"byte_end":19611,"line_start":57,"line_end":57,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19612,"byte_end":19615,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let answer = { *spin_mutex.lock() };","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19616,"byte_end":19656,"line_start":59,"line_end":59,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(answer, thread_count);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19657,"byte_end":19694,"line_start":60,"line_end":60,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19695,"byte_end":19702,"line_start":61,"line_end":61,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19963,"byte_end":19977,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"SpinMutexGuard","qualname":"::mutex::spin::SpinMutexGuard","value":"SpinMutexGuard {  }","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" A guard that provides mutable data access.","sig":null,"attributes":[{"value":"/ A guard that provides mutable data access.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19837,"byte_end":19883,"line_start":68,"line_end":68,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19884,"byte_end":19887,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ When the guard falls out of scope it will release the lock.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":19888,"byte_end":19951,"line_start":70,"line_end":70,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":55},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20638,"byte_end":20641,"line_start":97,"line_end":97,"column_start":18,"column_end":21},"name":"new","qualname":"<SpinMutex<T, R>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`SpinMutex`] wrapping the supplied data.","sig":null,"attributes":[{"value":"/ Creates a new [`SpinMutex`] wrapping the supplied data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20237,"byte_end":20296,"line_start":81,"line_end":81,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20301,"byte_end":20304,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20309,"byte_end":20322,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20327,"byte_end":20330,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20335,"byte_end":20342,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ use spin::mutex::SpinMutex;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20347,"byte_end":20378,"line_start":86,"line_end":86,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20383,"byte_end":20386,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ static MUTEX: SpinMutex<()> = SpinMutex::<_>::new(());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20391,"byte_end":20449,"line_start":88,"line_end":88,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20454,"byte_end":20457,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ fn demo() {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20462,"byte_end":20477,"line_start":90,"line_end":90,"column_start":5,"column_end":20}},{"value":"/     let lock = MUTEX.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20482,"byte_end":20514,"line_start":91,"line_end":91,"column_start":5,"column_end":37}},{"value":"/     // do something with lock","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20519,"byte_end":20552,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/     drop(lock);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20557,"byte_end":20576,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20581,"byte_end":20586,"line_start":94,"line_end":94,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20591,"byte_end":20598,"line_start":95,"line_end":95,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20603,"byte_end":20620,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21075,"byte_end":21085,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SpinMutex<T, R>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this [`SpinMutex`] and unwraps the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this [`SpinMutex`] and unwraps the underlying data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20819,"byte_end":20883,"line_start":105,"line_end":105,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20888,"byte_end":20891,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20896,"byte_end":20909,"line_start":107,"line_end":107,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20914,"byte_end":20917,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20922,"byte_end":20929,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(42);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20934,"byte_end":20986,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(42, lock.into_inner());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20991,"byte_end":21029,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21034,"byte_end":21041,"line_start":112,"line_end":112,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21046,"byte_end":21063,"line_start":113,"line_end":113,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21964,"byte_end":21974,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<SpinMutex<T, R>>::as_mut_ptr","value":"pub fn as_mut_ptr(&Self) -> *mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the underlying data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21299,"byte_end":21352,"line_start":121,"line_end":121,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21357,"byte_end":21360,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ This is mostly meant to be used for applications which require manual unlocking, but where","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21365,"byte_end":21459,"line_start":123,"line_end":123,"column_start":5,"column_end":99}},{"value":"/ storing both the lock and the pointer to the inner data gets inefficient.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21464,"byte_end":21541,"line_start":124,"line_end":124,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21546,"byte_end":21549,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21554,"byte_end":21567,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21572,"byte_end":21579,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(42);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21584,"byte_end":21636,"line_start":128,"line_end":128,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21641,"byte_end":21644,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21649,"byte_end":21661,"line_start":130,"line_end":130,"column_start":5,"column_end":17}},{"value":"/     core::mem::forget(lock.lock());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21666,"byte_end":21705,"line_start":131,"line_end":131,"column_start":5,"column_end":44}},{"value":"/     ","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21710,"byte_end":21718,"line_start":132,"line_end":132,"column_start":5,"column_end":13}},{"value":"/     assert_eq!(lock.as_mut_ptr().read(), 42);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21723,"byte_end":21772,"line_start":133,"line_end":133,"column_start":5,"column_end":54}},{"value":"/     lock.as_mut_ptr().write(58);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21777,"byte_end":21813,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21818,"byte_end":21821,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/     lock.force_unlock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21826,"byte_end":21854,"line_start":136,"line_end":136,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21859,"byte_end":21864,"line_start":137,"line_end":137,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21869,"byte_end":21872,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*lock.lock(), 58);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21877,"byte_end":21910,"line_start":139,"line_end":139,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21915,"byte_end":21918,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21923,"byte_end":21930,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":21935,"byte_end":21952,"line_start":142,"line_end":142,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22655,"byte_end":22659,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"lock","qualname":"<SpinMutex<T, R>>::lock","value":"pub fn lock(&Self) -> SpinMutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks the [`SpinMutex`] and returns a guard that permits access to the inner data.","sig":null,"attributes":[{"value":"/ Locks the [`SpinMutex`] and returns a guard that permits access to the inner data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22083,"byte_end":22169,"line_start":149,"line_end":149,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22174,"byte_end":22177,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The returned value may be dereferenced for data access","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22182,"byte_end":22240,"line_start":151,"line_end":151,"column_start":5,"column_end":63}},{"value":"/ and the lock will be dropped when the guard falls out of scope.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22245,"byte_end":22312,"line_start":152,"line_end":152,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22317,"byte_end":22320,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22325,"byte_end":22332,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22337,"byte_end":22388,"line_start":155,"line_end":155,"column_start":5,"column_end":56}},{"value":"/ {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22393,"byte_end":22398,"line_start":156,"line_end":156,"column_start":5,"column_end":10}},{"value":"/     let mut data = lock.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22403,"byte_end":22438,"line_start":157,"line_end":157,"column_start":5,"column_end":40}},{"value":"/     // The lock is now locked and the data can be accessed","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22443,"byte_end":22505,"line_start":158,"line_end":158,"column_start":5,"column_end":67}},{"value":"/     *data += 1;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22510,"byte_end":22529,"line_start":159,"line_end":159,"column_start":5,"column_end":24}},{"value":"/     // The lock is implicitly dropped at the end of the scope","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22534,"byte_end":22599,"line_start":160,"line_end":160,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22604,"byte_end":22609,"line_start":161,"line_end":161,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22614,"byte_end":22621,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22626,"byte_end":22643,"line_start":163,"line_end":163,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23607,"byte_end":23616,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"is_locked","qualname":"<SpinMutex<T, R>>::is_locked","value":"pub fn is_locked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is currently held.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is currently held.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23257,"byte_end":23306,"line_start":182,"line_end":182,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23311,"byte_end":23314,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23319,"byte_end":23331,"line_start":184,"line_end":184,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23336,"byte_end":23339,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This function provides no synchronization guarantees and so its result should be considered 'out of date'","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23344,"byte_end":23453,"line_start":186,"line_end":186,"column_start":5,"column_end":114}},{"value":"/ the instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23458,"byte_end":23573,"line_start":187,"line_end":187,"column_start":5,"column_end":120}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23578,"byte_end":23595,"line_start":188,"line_end":188,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24011,"byte_end":24023,"line_start":201,"line_end":201,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<SpinMutex<T, R>>::force_unlock","value":"pub unsafe fn force_unlock(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Force unlock this [`SpinMutex`].","sig":null,"attributes":[{"value":"/ Force unlock this [`SpinMutex`].","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23687,"byte_end":23723,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23728,"byte_end":23731,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23736,"byte_end":23748,"line_start":195,"line_end":195,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23753,"byte_end":23756,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ This is *extremely* unsafe if the lock is not held by the current","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23761,"byte_end":23830,"line_start":197,"line_end":197,"column_start":5,"column_end":74}},{"value":"/ thread. However, this can be useful in some instances for exposing the","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23835,"byte_end":23909,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/ lock to FFI that doesn't know how to deal with RAII.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23914,"byte_end":23970,"line_start":199,"line_end":199,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23975,"byte_end":23992,"line_start":200,"line_end":200,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24566,"byte_end":24574,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<SpinMutex<T, R>>::try_lock","value":"pub fn try_lock(&Self) -> Option<SpinMutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Try to lock this [`SpinMutex`], returning a lock guard if successful.","sig":null,"attributes":[{"value":"/ Try to lock this [`SpinMutex`], returning a lock guard if successful.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24095,"byte_end":24168,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24173,"byte_end":24176,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24181,"byte_end":24194,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24199,"byte_end":24202,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24207,"byte_end":24214,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::mutex::SpinMutex::<_>::new(42);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24219,"byte_end":24271,"line_start":210,"line_end":210,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24276,"byte_end":24279,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let maybe_guard = lock.try_lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24284,"byte_end":24322,"line_start":212,"line_end":212,"column_start":5,"column_end":43}},{"value":"/ assert!(maybe_guard.is_some());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24327,"byte_end":24362,"line_start":213,"line_end":213,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24367,"byte_end":24370,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ // `maybe_guard` is still held, so the second call fails","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24375,"byte_end":24435,"line_start":215,"line_end":215,"column_start":5,"column_end":65}},{"value":"/ let maybe_guard2 = lock.try_lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24440,"byte_end":24479,"line_start":216,"line_end":216,"column_start":5,"column_end":44}},{"value":"/ assert!(maybe_guard2.is_none());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24484,"byte_end":24520,"line_start":217,"line_end":217,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24525,"byte_end":24532,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":24537,"byte_end":24554,"line_start":219,"line_end":219,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25626,"byte_end":25633,"line_start":247,"line_end":247,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SpinMutex<T, R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25065,"byte_end":25120,"line_start":233,"line_end":233,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25125,"byte_end":25128,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the [`SpinMutex`] mutably, and a mutable reference is guaranteed to be exclusive in","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25133,"byte_end":25244,"line_start":235,"line_end":235,"column_start":5,"column_end":116}},{"value":"/ Rust, no actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25249,"byte_end":25359,"line_start":236,"line_end":236,"column_start":5,"column_end":115}},{"value":"/ such, this is a 'zero-cost' operation.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25364,"byte_end":25406,"line_start":237,"line_end":237,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25411,"byte_end":25414,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25419,"byte_end":25432,"line_start":239,"line_end":239,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25437,"byte_end":25440,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25445,"byte_end":25452,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ let mut lock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25457,"byte_end":25512,"line_start":242,"line_end":242,"column_start":5,"column_end":60}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25517,"byte_end":25542,"line_start":243,"line_end":243,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.lock(), 10);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25547,"byte_end":25580,"line_start":244,"line_end":244,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25585,"byte_end":25592,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25597,"byte_end":25614,"line_start":246,"line_end":246,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26943,"byte_end":26947,"line_start":291,"line_end":291,"column_start":12,"column_end":16},"name":"leak","qualname":"<SpinMutexGuard>::leak","value":"pub fn leak(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Leak the lock guard, yielding a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Leak the lock guard, yielding a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26508,"byte_end":26585,"line_start":278,"line_end":278,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26590,"byte_end":26593,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ Note that this function will permanently lock the original [`SpinMutex`].","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26598,"byte_end":26675,"line_start":280,"line_end":280,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26680,"byte_end":26683,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26688,"byte_end":26695,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ let mylock = spin::mutex::SpinMutex::<_>::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26700,"byte_end":26753,"line_start":283,"line_end":283,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26758,"byte_end":26761,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let data: &mut i32 = spin::mutex::SpinMutexGuard::leak(mylock.lock());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26766,"byte_end":26840,"line_start":285,"line_end":285,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26845,"byte_end":26848,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ *data = 1;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26853,"byte_end":26867,"line_start":287,"line_end":287,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(*data, 1);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26872,"byte_end":26897,"line_start":288,"line_end":288,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26902,"byte_end":26909,"line_start":289,"line_end":289,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26914,"byte_end":26931,"line_start":290,"line_end":290,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11950,"byte_end":11955,"line_start":99,"line_end":99,"column_start":12,"column_end":17},"name":"Mutex","qualname":"::mutex::Mutex","value":"Mutex {  }","parent":null,"children":[{"krate":0,"index":142}],"decl_id":null,"docs":" A spin-based lock providing mutually exclusive access to data.","sig":null,"attributes":[{"value":"/ A spin-based lock providing mutually exclusive access to data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10697,"byte_end":10763,"line_start":49,"line_end":49,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10764,"byte_end":10767,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The implementation uses either a ticket mutex or a regular spin mutex depending on whether the `spin_mutex` or","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10768,"byte_end":10882,"line_start":51,"line_end":51,"column_start":1,"column_end":115}},{"value":"/ `ticket_mutex` feature flag is enabled.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10883,"byte_end":10926,"line_start":52,"line_end":52,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10927,"byte_end":10930,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10931,"byte_end":10944,"line_start":54,"line_end":54,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10945,"byte_end":10948,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10949,"byte_end":10956,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10957,"byte_end":10970,"line_start":57,"line_end":57,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10971,"byte_end":10974,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let lock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":10975,"byte_end":11010,"line_start":59,"line_end":59,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11011,"byte_end":11014,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // Modify the data","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11015,"byte_end":11037,"line_start":61,"line_end":61,"column_start":1,"column_end":23}},{"value":"/ *lock.lock() = 2;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11038,"byte_end":11059,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11060,"byte_end":11063,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ // Read the data","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11064,"byte_end":11084,"line_start":64,"line_end":64,"column_start":1,"column_end":21}},{"value":"/ let answer = *lock.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11085,"byte_end":11115,"line_start":65,"line_end":65,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(answer, 2);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11116,"byte_end":11142,"line_start":66,"line_end":66,"column_start":1,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11143,"byte_end":11150,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11151,"byte_end":11154,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Thread safety example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11155,"byte_end":11182,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11183,"byte_end":11186,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11187,"byte_end":11194,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ use spin;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11195,"byte_end":11208,"line_start":72,"line_end":72,"column_start":1,"column_end":14}},{"value":"/ use std::sync::{Arc, Barrier};","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11209,"byte_end":11243,"line_start":73,"line_end":73,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11244,"byte_end":11247,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let thread_count = 1000;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11248,"byte_end":11276,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ let spin_mutex = Arc::new(spin::Mutex::new(0));","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11277,"byte_end":11328,"line_start":76,"line_end":76,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11329,"byte_end":11332,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ // We use a barrier to ensure the readout happens after all writing","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11333,"byte_end":11404,"line_start":78,"line_end":78,"column_start":1,"column_end":72}},{"value":"/ let barrier = Arc::new(Barrier::new(thread_count + 1));","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11405,"byte_end":11464,"line_start":79,"line_end":79,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11465,"byte_end":11468,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ for _ in (0..thread_count) {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11469,"byte_end":11501,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"/     let my_barrier = barrier.clone();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11502,"byte_end":11543,"line_start":82,"line_end":82,"column_start":1,"column_end":42}},{"value":"/     let my_lock = spin_mutex.clone();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11544,"byte_end":11585,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/     std::thread::spawn(move || {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11586,"byte_end":11622,"line_start":84,"line_end":84,"column_start":1,"column_end":37}},{"value":"/         let mut guard = my_lock.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11623,"byte_end":11666,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/         *guard += 1;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11667,"byte_end":11691,"line_start":86,"line_end":86,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11692,"byte_end":11695,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/         // Release the lock to prevent a deadlock","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11696,"byte_end":11749,"line_start":88,"line_end":88,"column_start":1,"column_end":54}},{"value":"/         drop(guard);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11750,"byte_end":11774,"line_start":89,"line_end":89,"column_start":1,"column_end":25}},{"value":"/         my_barrier.wait();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11775,"byte_end":11805,"line_start":90,"line_end":90,"column_start":1,"column_end":31}},{"value":"/     });","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11806,"byte_end":11817,"line_start":91,"line_end":91,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11818,"byte_end":11823,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11824,"byte_end":11827,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ barrier.wait();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11828,"byte_end":11847,"line_start":94,"line_end":94,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11848,"byte_end":11851,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ let answer = { *spin_mutex.lock() };","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11852,"byte_end":11892,"line_start":96,"line_end":96,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(answer, thread_count);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11893,"byte_end":11930,"line_start":97,"line_end":97,"column_start":1,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":11931,"byte_end":11938,"line_start":98,"line_end":98,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12434,"byte_end":12444,"line_start":113,"line_end":113,"column_start":12,"column_end":22},"name":"MutexGuard","qualname":"::mutex::MutexGuard","value":"MutexGuard {  }","parent":null,"children":[{"krate":0,"index":152}],"decl_id":null,"docs":" A generic guard that will protect some data access and\n uses either a ticket lock or a normal spin mutex.","sig":null,"attributes":[{"value":"/ A generic guard that will protect some data access and","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12126,"byte_end":12184,"line_start":106,"line_end":106,"column_start":1,"column_end":59}},{"value":"/ uses either a ticket lock or a normal spin mutex.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12185,"byte_end":12238,"line_start":107,"line_end":107,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12239,"byte_end":12242,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ For more info see [`TicketMutexGuard`] or [`SpinMutexGuard`].","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12243,"byte_end":12308,"line_start":109,"line_end":109,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12309,"byte_end":12312,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ [`TicketMutexGuard`]: ./struct.TicketMutexGuard.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12313,"byte_end":12369,"line_start":111,"line_end":111,"column_start":1,"column_end":57}},{"value":"/ [`SpinMutexGuard`]: ./struct.SpinMutexGuard.html","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12370,"byte_end":12422,"line_start":112,"line_end":112,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12907,"byte_end":12910,"line_start":134,"line_end":134,"column_start":18,"column_end":21},"name":"new","qualname":"<Mutex<T, R>>::new","value":"pub const fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Mutex`] wrapping the supplied data.","sig":null,"attributes":[{"value":"/ Creates a new [`Mutex`] wrapping the supplied data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12534,"byte_end":12589,"line_start":118,"line_end":118,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12594,"byte_end":12597,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12602,"byte_end":12615,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12620,"byte_end":12623,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12628,"byte_end":12635,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use spin::Mutex;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12640,"byte_end":12660,"line_start":123,"line_end":123,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12665,"byte_end":12668,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ static MUTEX: Mutex<()> = Mutex::new(());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12673,"byte_end":12718,"line_start":125,"line_end":125,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12723,"byte_end":12726,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ fn demo() {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12731,"byte_end":12746,"line_start":127,"line_end":127,"column_start":5,"column_end":20}},{"value":"/     let lock = MUTEX.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12751,"byte_end":12783,"line_start":128,"line_end":128,"column_start":5,"column_end":37}},{"value":"/     // do something with lock","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12788,"byte_end":12821,"line_start":129,"line_end":129,"column_start":5,"column_end":38}},{"value":"/     drop(lock);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12826,"byte_end":12845,"line_start":130,"line_end":130,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12850,"byte_end":12855,"line_start":131,"line_end":131,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12860,"byte_end":12867,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12872,"byte_end":12889,"line_start":133,"line_end":133,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13225,"byte_end":13235,"line_start":147,"line_end":147,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Mutex<T, R>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes this [`Mutex`] and unwraps the underlying data.","sig":null,"attributes":[{"value":"/ Consumes this [`Mutex`] and unwraps the underlying data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12989,"byte_end":13049,"line_start":138,"line_end":138,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13054,"byte_end":13057,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13062,"byte_end":13075,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13080,"byte_end":13083,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13088,"byte_end":13095,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::Mutex::new(42);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13100,"byte_end":13136,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(42, lock.into_inner());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13141,"byte_end":13179,"line_start":144,"line_end":144,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13184,"byte_end":13191,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13196,"byte_end":13213,"line_start":146,"line_end":146,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13894,"byte_end":13898,"line_start":168,"line_end":168,"column_start":12,"column_end":16},"name":"lock","qualname":"<Mutex<T, R>>::lock","value":"pub fn lock(&Self) -> MutexGuard<, T>","parent":null,"children":[],"decl_id":null,"docs":" Locks the [`Mutex`] and returns a guard that permits access to the inner data.","sig":null,"attributes":[{"value":"/ Locks the [`Mutex`] and returns a guard that permits access to the inner data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13342,"byte_end":13424,"line_start":153,"line_end":153,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13429,"byte_end":13432,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The returned value may be dereferenced for data access","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13437,"byte_end":13495,"line_start":155,"line_end":155,"column_start":5,"column_end":63}},{"value":"/ and the lock will be dropped when the guard falls out of scope.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13500,"byte_end":13567,"line_start":156,"line_end":156,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13572,"byte_end":13575,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13580,"byte_end":13587,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13592,"byte_end":13627,"line_start":159,"line_end":159,"column_start":5,"column_end":40}},{"value":"/ {","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13632,"byte_end":13637,"line_start":160,"line_end":160,"column_start":5,"column_end":10}},{"value":"/     let mut data = lock.lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13642,"byte_end":13677,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/     // The lock is now locked and the data can be accessed","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13682,"byte_end":13744,"line_start":162,"line_end":162,"column_start":5,"column_end":67}},{"value":"/     *data += 1;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13749,"byte_end":13768,"line_start":163,"line_end":163,"column_start":5,"column_end":24}},{"value":"/     // The lock is implicitly dropped at the end of the scope","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13773,"byte_end":13838,"line_start":164,"line_end":164,"column_start":5,"column_end":70}},{"value":"/ }","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13843,"byte_end":13848,"line_start":165,"line_end":165,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13853,"byte_end":13860,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13865,"byte_end":13882,"line_start":167,"line_end":167,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14390,"byte_end":14399,"line_start":183,"line_end":183,"column_start":12,"column_end":21},"name":"is_locked","qualname":"<Mutex<T, R>>::is_locked","value":"pub fn is_locked(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the lock is currently held.","sig":null,"attributes":[{"value":"/ Returns `true` if the lock is currently held.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14040,"byte_end":14089,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14094,"byte_end":14097,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14102,"byte_end":14114,"line_start":178,"line_end":178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14119,"byte_end":14122,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ This function provides no synchronization guarantees and so its result should be considered 'out of date'","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14127,"byte_end":14236,"line_start":180,"line_end":180,"column_start":5,"column_end":114}},{"value":"/ the instant it is called. Do not use it for synchronization purposes. However, it may be useful as a heuristic.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14241,"byte_end":14356,"line_start":181,"line_end":181,"column_start":5,"column_end":120}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14361,"byte_end":14378,"line_start":182,"line_end":182,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14779,"byte_end":14791,"line_start":195,"line_end":195,"column_start":19,"column_end":31},"name":"force_unlock","qualname":"<Mutex<T, R>>::force_unlock","value":"pub unsafe fn force_unlock(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Force unlock this [`Mutex`].","sig":null,"attributes":[{"value":"/ Force unlock this [`Mutex`].","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14459,"byte_end":14491,"line_start":187,"line_end":187,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14496,"byte_end":14499,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14504,"byte_end":14516,"line_start":189,"line_end":189,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14521,"byte_end":14524,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ This is *extremely* unsafe if the lock is not held by the current","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14529,"byte_end":14598,"line_start":191,"line_end":191,"column_start":5,"column_end":74}},{"value":"/ thread. However, this can be useful in some instances for exposing the","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14603,"byte_end":14677,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ lock to FFI that doesn't know how to deal with RAII.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14682,"byte_end":14738,"line_start":193,"line_end":193,"column_start":5,"column_end":61}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14743,"byte_end":14760,"line_start":194,"line_end":194,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15297,"byte_end":15305,"line_start":214,"line_end":214,"column_start":12,"column_end":20},"name":"try_lock","qualname":"<Mutex<T, R>>::try_lock","value":"pub fn try_lock(&Self) -> Option<MutexGuard<, T>>","parent":null,"children":[],"decl_id":null,"docs":" Try to lock this [`Mutex`], returning a lock guard if successful.","sig":null,"attributes":[{"value":"/ Try to lock this [`Mutex`], returning a lock guard if successful.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14846,"byte_end":14915,"line_start":199,"line_end":199,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14920,"byte_end":14923,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14928,"byte_end":14941,"line_start":201,"line_end":201,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14946,"byte_end":14949,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14954,"byte_end":14961,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ let lock = spin::Mutex::new(42);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14966,"byte_end":15002,"line_start":204,"line_end":204,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15007,"byte_end":15010,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let maybe_guard = lock.try_lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15015,"byte_end":15053,"line_start":206,"line_end":206,"column_start":5,"column_end":43}},{"value":"/ assert!(maybe_guard.is_some());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15058,"byte_end":15093,"line_start":207,"line_end":207,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15098,"byte_end":15101,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ // `maybe_guard` is still held, so the second call fails","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15106,"byte_end":15166,"line_start":209,"line_end":209,"column_start":5,"column_end":65}},{"value":"/ let maybe_guard2 = lock.try_lock();","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15171,"byte_end":15210,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ assert!(maybe_guard2.is_none());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15215,"byte_end":15251,"line_start":211,"line_end":211,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15256,"byte_end":15263,"line_start":212,"line_end":212,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15268,"byte_end":15285,"line_start":213,"line_end":213,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15989,"byte_end":15996,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Mutex<T, R>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15448,"byte_end":15503,"line_start":220,"line_end":220,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15508,"byte_end":15511,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Since this call borrows the [`Mutex`] mutably, and a mutable reference is guaranteed to be exclusive in Rust,","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15516,"byte_end":15629,"line_start":222,"line_end":222,"column_start":5,"column_end":118}},{"value":"/ no actual locking needs to take place -- the mutable borrow statically guarantees no locks exist. As such,","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15634,"byte_end":15744,"line_start":223,"line_end":223,"column_start":5,"column_end":115}},{"value":"/ this is a 'zero-cost' operation.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15749,"byte_end":15785,"line_start":224,"line_end":224,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15790,"byte_end":15793,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15798,"byte_end":15811,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15816,"byte_end":15819,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15824,"byte_end":15831,"line_start":228,"line_end":228,"column_start":5,"column_end":12}},{"value":"/ let mut lock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15836,"byte_end":15875,"line_start":229,"line_end":229,"column_start":5,"column_end":44}},{"value":"/ *lock.get_mut() = 10;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15880,"byte_end":15905,"line_start":230,"line_end":230,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(*lock.lock(), 10);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15910,"byte_end":15943,"line_start":231,"line_end":231,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15948,"byte_end":15955,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":15960,"byte_end":15977,"line_start":233,"line_end":233,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16905,"byte_end":16909,"line_start":271,"line_end":271,"column_start":12,"column_end":16},"name":"leak","qualname":"<MutexGuard>::leak","value":"pub fn leak(Self) -> &'a mut T","parent":null,"children":[],"decl_id":null,"docs":" Leak the lock guard, yielding a mutable reference to the underlying data.","sig":null,"attributes":[{"value":"/ Leak the lock guard, yielding a mutable reference to the underlying data.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16501,"byte_end":16578,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16583,"byte_end":16586,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Note that this function will permanently lock the original [`Mutex`].","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16591,"byte_end":16664,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16669,"byte_end":16672,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16677,"byte_end":16684,"line_start":262,"line_end":262,"column_start":5,"column_end":12}},{"value":"/ let mylock = spin::Mutex::new(0);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16689,"byte_end":16726,"line_start":263,"line_end":263,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16731,"byte_end":16734,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let data: &mut i32 = spin::MutexGuard::leak(mylock.lock());","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16739,"byte_end":16802,"line_start":265,"line_end":265,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16807,"byte_end":16810,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ *data = 1;","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16815,"byte_end":16829,"line_start":267,"line_end":267,"column_start":5,"column_end":19}},{"value":"/ assert_eq!(*data, 1);","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16834,"byte_end":16859,"line_start":268,"line_end":268,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16864,"byte_end":16871,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16876,"byte_end":16893,"line_start":270,"line_end":270,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"relax","qualname":"::relax","value":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212}],"decl_id":null,"docs":" Strategies that determine the behaviour of locks when encountering contention.\n","sig":null,"attributes":[{"value":"/ Strategies that determine the behaviour of locks when encountering contention.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":32694,"byte_end":32776,"line_start":1,"line_end":1,"column_start":1,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":32842,"byte_end":32855,"line_start":4,"line_end":4,"column_start":11,"column_end":24},"name":"RelaxStrategy","qualname":"::relax::RelaxStrategy","value":"RelaxStrategy","parent":null,"children":[{"krate":0,"index":205}],"decl_id":null,"docs":" A trait implemented by spinning relax strategies.\n","sig":null,"attributes":[{"value":"/ A trait implemented by spinning relax strategies.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":32778,"byte_end":32831,"line_start":3,"line_end":3,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":32935,"byte_end":32940,"line_start":6,"line_end":6,"column_start":8,"column_end":13},"name":"relax","qualname":"::relax::RelaxStrategy::relax","value":"pub fn relax()","parent":{"krate":0,"index":204},"children":[],"decl_id":null,"docs":" Perform the relaxing operation during a period of contention.\n","sig":null,"attributes":[{"value":"/ Perform the relaxing operation during a period of contention.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":32862,"byte_end":32927,"line_start":5,"line_end":5,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33915,"byte_end":33919,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Spin","qualname":"::relax::Spin","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strategy that rapidly spins while informing the CPU that it should power down non-essential components via\n [`core::hint::spin_loop`].","sig":null,"attributes":[{"value":"/ A strategy that rapidly spins while informing the CPU that it should power down non-essential components via","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":32947,"byte_end":33059,"line_start":9,"line_end":9,"column_start":1,"column_end":113}},{"value":"/ [`core::hint::spin_loop`].","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33060,"byte_end":33090,"line_start":10,"line_end":10,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33091,"byte_end":33094,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ Note that spinning is a 'dumb' strategy and most schedulers cannot correctly differentiate it from useful work,","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33095,"byte_end":33210,"line_start":12,"line_end":12,"column_start":1,"column_end":116}},{"value":"/ thereby misallocating even more CPU time to the spinning process. This is known as","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33211,"byte_end":33297,"line_start":13,"line_end":13,"column_start":1,"column_end":87}},{"value":"/ ['priority inversion'](https://matklad.github.io/2020/01/02/spinlocks-considered-harmful.html).","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33298,"byte_end":33397,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33398,"byte_end":33401,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ If you see signs that priority inversion is occurring, consider switching to [`Yield`] or, even better, not using a","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33402,"byte_end":33521,"line_start":16,"line_end":16,"column_start":1,"column_end":120}},{"value":"/ spinlock at all and opting for a proper scheduler-aware lock. Remember also that different targets, operating","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33522,"byte_end":33635,"line_start":17,"line_end":17,"column_start":1,"column_end":114}},{"value":"/ systems, schedulers, and even the same scheduler with different workloads will exhibit different behaviour. Just","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33636,"byte_end":33752,"line_start":18,"line_end":18,"column_start":1,"column_end":117}},{"value":"/ because priority inversion isn't occurring in your tests does not mean that it will not occur. Use a scheduler-","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33753,"byte_end":33868,"line_start":19,"line_end":19,"column_start":1,"column_end":116}},{"value":"/ aware lock if at all possible.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33869,"byte_end":33903,"line_start":20,"line_end":20,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":35128,"byte_end":35132,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"Loop","qualname":"::relax::Loop","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strategy that rapidly spins, without telling the CPU to do any powering down.","sig":null,"attributes":[{"value":"/ A strategy that rapidly spins, without telling the CPU to do any powering down.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":34732,"byte_end":34815,"line_start":48,"line_end":48,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":34816,"byte_end":34819,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ You almost certainly do not want to use this. Use [`Spin`] instead. It exists for completeness and for targets","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":34820,"byte_end":34934,"line_start":50,"line_end":50,"column_start":1,"column_end":115}},{"value":"/ that, for some reason, miscompile or do not support spin hint intrinsics despite attempting to generate code for","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":34935,"byte_end":35051,"line_start":51,"line_end":51,"column_start":1,"column_end":117}},{"value":"/ them (i.e: this is a workaround for possible compiler bugs).","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":35052,"byte_end":35116,"line_start":52,"line_end":52,"column_start":1,"column_end":65}}]},{"kind":"Type","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":4772,"byte_end":4777,"line_start":117,"line_end":117,"column_start":10,"column_end":15},"name":"Mutex","qualname":"::Mutex","value":"crate::mutex::Mutex<T>","parent":null,"children":[],"decl_id":null,"docs":" A primitive that synchronizes the execution of multiple threads. See [`mutex::Mutex`] for documentation.","sig":null,"attributes":[{"value":"/ A primitive that synchronizes the execution of multiple threads. See [`mutex::Mutex`] for documentation.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":4362,"byte_end":4470,"line_start":111,"line_end":111,"column_start":1,"column_end":109}},{"value":"/","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":4471,"byte_end":4474,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ A note for advanced users: this alias exists to avoid subtle type inference errors due to the default relax","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":4475,"byte_end":4586,"line_start":113,"line_end":113,"column_start":1,"column_end":112}},{"value":"/ strategy type parameter. If you need a non-default relax strategy, use the fully-qualified path.","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":4587,"byte_end":4687,"line_start":114,"line_end":114,"column_start":1,"column_end":101}},{"value":"cfg(feature = \"mutex\")","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":4688,"byte_end":4713,"line_start":115,"line_end":115,"column_start":1,"column_end":26}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20132,"byte_end":20141,"line_start":77,"line_end":77,"column_start":40,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20187,"byte_end":20196,"line_start":78,"line_end":78,"column_start":40,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20215,"byte_end":20224,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22061,"byte_end":22070,"line_start":148,"line_end":148,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23235,"byte_end":23244,"line_start":181,"line_end":181,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25885,"byte_end":25894,"line_start":254,"line_end":254,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26263,"byte_end":26272,"line_start":265,"line_end":265,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26378,"byte_end":26387,"line_start":271,"line_end":271,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26480,"byte_end":26494,"line_start":277,"line_end":277,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27199,"byte_end":27213,"line_start":298,"line_end":298,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27379,"byte_end":27393,"line_start":304,"line_end":304,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27539,"byte_end":27553,"line_start":310,"line_end":310,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27672,"byte_end":27686,"line_start":317,"line_end":317,"column_start":34,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27792,"byte_end":27806,"line_start":323,"line_end":323,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12053,"byte_end":12058,"line_start":103,"line_end":103,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12110,"byte_end":12115,"line_start":104,"line_end":104,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12516,"byte_end":12521,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13324,"byte_end":13329,"line_start":152,"line_end":152,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14022,"byte_end":14027,"line_start":175,"line_end":175,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16105,"byte_end":16110,"line_start":239,"line_end":239,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16268,"byte_end":16273,"line_start":245,"line_end":245,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":177}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16379,"byte_end":16384,"line_start":251,"line_end":251,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16477,"byte_end":16487,"line_start":257,"line_end":257,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17036,"byte_end":17046,"line_start":276,"line_end":276,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17212,"byte_end":17222,"line_start":282,"line_end":282,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":193}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17368,"byte_end":17378,"line_start":288,"line_end":288,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17500,"byte_end":17510,"line_start":295,"line_end":295,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33945,"byte_end":33949,"line_start":23,"line_end":23,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":35158,"byte_end":35162,"line_start":55,"line_end":55,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":213}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2571,"byte_end":2576,"line_start":71,"line_end":71,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":9515,"byte_end":9519,"line_start":18,"line_end":18,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\lib.rs","byte_start":2766,"byte_end":2771,"line_start":78,"line_end":78,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":203}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20132,"byte_end":20141,"line_start":77,"line_end":77,"column_start":40,"column_end":49},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":37},"to":{"krate":1,"index":2892}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20187,"byte_end":20196,"line_start":78,"line_end":78,"column_start":40,"column_end":49},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":37},"to":{"krate":1,"index":2880}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":20215,"byte_end":20224,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":22061,"byte_end":22070,"line_start":148,"line_end":148,"column_start":35,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":23235,"byte_end":23244,"line_start":181,"line_end":181,"column_start":20,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":25885,"byte_end":25894,"line_start":254,"line_end":254,"column_start":48,"column_end":57},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":37},"to":{"krate":1,"index":8969}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26263,"byte_end":26272,"line_start":265,"line_end":265,"column_start":42,"column_end":51},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":37},"to":{"krate":1,"index":2858}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26378,"byte_end":26387,"line_start":271,"line_end":271,"column_start":24,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":37},"to":{"krate":1,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":26480,"byte_end":26494,"line_start":277,"line_end":277,"column_start":21,"column_end":35},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":43},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27199,"byte_end":27213,"line_start":298,"line_end":298,"column_start":49,"column_end":63},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":8969}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27379,"byte_end":27393,"line_start":304,"line_end":304,"column_start":53,"column_end":67},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":8976}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27539,"byte_end":27553,"line_start":310,"line_end":310,"column_start":31,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":3091}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27672,"byte_end":27686,"line_start":317,"line_end":317,"column_start":34,"column_end":48},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":3104}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex\\spin.rs","byte_start":27792,"byte_end":27806,"line_start":323,"line_end":323,"column_start":30,"column_end":44},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":43},"to":{"krate":1,"index":3115}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12053,"byte_end":12058,"line_start":103,"line_end":103,"column_start":43,"column_end":48},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":2892}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12110,"byte_end":12115,"line_start":104,"line_end":104,"column_start":43,"column_end":48},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":2880}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":12516,"byte_end":12521,"line_start":117,"line_end":117,"column_start":12,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":13324,"byte_end":13329,"line_start":152,"line_end":152,"column_start":35,"column_end":40},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":14022,"byte_end":14027,"line_start":175,"line_end":175,"column_start":20,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16105,"byte_end":16110,"line_start":239,"line_end":239,"column_start":48,"column_end":53},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":8969}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16268,"byte_end":16273,"line_start":245,"line_end":245,"column_start":42,"column_end":47},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":2858}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16379,"byte_end":16384,"line_start":251,"line_end":251,"column_start":24,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":139},"to":{"krate":1,"index":2786}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":16477,"byte_end":16487,"line_start":257,"line_end":257,"column_start":21,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":149},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17036,"byte_end":17046,"line_start":276,"line_end":276,"column_start":49,"column_end":59},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":149},"to":{"krate":1,"index":8969}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17212,"byte_end":17222,"line_start":282,"line_end":282,"column_start":53,"column_end":63},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":149},"to":{"krate":1,"index":8976}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17368,"byte_end":17378,"line_start":288,"line_end":288,"column_start":31,"column_end":41},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":149},"to":{"krate":1,"index":3091}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\mutex.rs","byte_start":17500,"byte_end":17510,"line_start":295,"line_end":295,"column_start":34,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":149},"to":{"krate":1,"index":3104}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":33945,"byte_end":33949,"line_start":23,"line_end":23,"column_start":24,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":204}},{"span":{"file_name":"C:\\Users\\Qiao\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\spin-0.9.2\\src\\relax.rs","byte_start":35158,"byte_end":35162,"line_start":55,"line_end":55,"column_start":24,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":210},"to":{"krate":0,"index":204}}]}